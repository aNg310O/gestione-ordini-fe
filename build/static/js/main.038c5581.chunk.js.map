{"version":3,"sources":["services/auth.service.js","components/login.component.js","services/auth-header.js","services/user.service.js","components/home.component.js","components/profile.component.js","api.js","AppBar.js","MyTable.js","SellerComponent.js","components/board-user.component.js","AdminAppBar.js","AdminProductTable.js","AdminUsersTable.js","AdminReportTable.js","AdminReportDay.js","components/register.component.js","AdminComponent.js","components/board-admin.component.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","username","password","axios","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","email","parse","getItem","required","value","className","role","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","state","loading","message","e","this","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","toString","src","alt","onSubmit","ref","c","htmlFor","type","name","onChange","validations","disabled","style","display","Component","authHeader","user","get","headers","Home","content","UserService","getPublicContent","Profile","redirect","userReady","currentUser","getCurrentUser","to","substring","substr","id","roles","map","index","create","baseURL","responseType","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","seller","Table","useState","ordini","setOrdini","useEffect","getData","trig","a","API","key","toUpperCase","desc","qty","pesoTotale","dataInserimento","note","onClick","delete","res","del","filter","ordine","removeData","formControl","margin","minWidth","selectEmpty","marginTop","width","SellerComponent","items","setItems","selected","setSelected","boxVisibility","setBoxVisiblity","boxCustomVisibility","setBoxCustomVisiblity","order","setOrder","result","setResult","open","setOpen","prodotto","setProdotto","setOrdine","setNote","pesoTotaleCustom","setPesoTotaleCustom","checkA","setCheckA","boxProductVisibility","setBoxProductVisibility","checkB","setCheckB","boxOrderVisibility","setBoxOrderVisibility","retrieveProduct","catch","console","log","handleClose","event","reason","FormControlLabel","control","Switch","checked","label","Box","FormControl","InputLabel","Select","labelId","myData","MenuItem","TextField","InputLabelProps","shrink","InputProps","readOnly","grammatura","defaultValue","inputProps","min","Button","selection","status","handleClick","size","backgroundColor","alignItems","justifyContent","startIcon","customData","handleCustomClick","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","BoardUser","getUserBoard","AdminAppBar","ProductTable","trigP","err","logout","AdminUsersTable","users","setUsers","trigU","AdminReportTable","page","setPage","trigR","totalone","prop","obj","totale","_id","Object","keys","today","Date","toISOString","slice","myFormat","scrollTo","input","document","getElementById","scrollY","html2canvas","canvas","imgData","toDataURL","pdf","jsPDF","orientation","unit","format","text","addImage","save","handleReportClick","AdminReportDay","selectedDate","setSelectedDate","fileName","setFileName","trigRD","str","utils","DateFnsUtils","disableFuture","inputVariant","date","KeyboardButtonProps","isEmail","vusername","vpassword","Register","handleRegister","onChangeEmail","successful","register","AdminComponent","setDesc","setGrammatura","boxUsersVisibility","setBoxUsersVisibility","setPesoTotale","boxReportVisibility","setBoxReportVisibility","checkC","setCheckC","boxReportDayVisibility","setBoxReportDayVisibility","checkD","setCheckD","handleProductClick","BoardAdmin","getAdminBoard","App","logOut","showAdminBoard","undefined","includes","href","exact","path","component","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+QAEMA,EAAU,4DAmCD,M,8FAhCPC,EAAUC,GACd,OAAOC,IACJC,KAAKJ,EAAU,SAAU,CACxBC,WACAC,aAEDG,MAAK,SAAAC,GAKJ,OAJIA,EAASC,KAAKC,aAChBC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUN,EAASC,OAGhDD,EAASC,U,+BAKpBE,aAAaI,WAAW,U,+BAGjBZ,EAAUa,EAAOZ,GACxB,OAAOC,IAAMC,KAAKJ,EAAU,SAAU,CACpCC,WACAa,QACAZ,e,uCAKF,OAAOS,KAAKI,MAAMN,aAAaO,QAAQ,a,yDC1BrCC,EAAW,SAAAC,GACf,IAAKA,EACH,OACE,qBAAKC,UAAU,qBAAqBC,KAAK,QAAzC,sCAOeC,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBACxB,EAAKE,iBAAmB,EAAKA,iBAAiBF,KAAtB,gBAExB,EAAKG,MAAQ,CACX1B,SAAU,GACVC,SAAU,GACV0B,SAAS,EACTC,QAAS,IAVM,E,6DAcFC,GACfC,KAAKC,SAAS,CACZ/B,SAAU6B,EAAEG,OAAOf,U,uCAINY,GACfC,KAAKC,SAAS,CACZ9B,SAAU4B,EAAEG,OAAOf,U,kCAIXY,GAAI,IAAD,OACbA,EAAEI,iBAEFH,KAAKC,SAAS,CACZH,QAAS,GACTD,SAAS,IAGXG,KAAKI,KAAKC,cAEmC,IAAzCL,KAAKM,SAASC,QAAQC,QAAQC,OAChCC,EAAYC,MAAMX,KAAKJ,MAAM1B,SAAU8B,KAAKJ,MAAMzB,UAAUG,MAC1D,WACE,EAAKiB,MAAMqB,QAAQC,KAAK,KACxBC,OAAOC,SAASC,YAElB,SAAAC,GACE,IAAMC,EACHD,EAAM1C,UACL0C,EAAM1C,SAASC,MACfyC,EAAM1C,SAASC,KAAKsB,SACtBmB,EAAMnB,SACNmB,EAAME,WAER,EAAKlB,SAAS,CACZJ,SAAS,EACTC,QAASoB,OAKflB,KAAKC,SAAS,CACZJ,SAAS,M,+BAKL,IAAD,OACP,OACE,qBAAKT,UAAU,YAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,qBACEgC,IAAI,8CACJC,IAAI,cACJjC,UAAU,qBAGZ,eAAC,IAAD,CACEkC,SAAUtB,KAAKR,YACf+B,IAAK,SAAAC,GACH,EAAKpB,KAAOoB,GAHhB,UAME,sBAAKpC,UAAU,aAAf,UACE,uBAAOqC,QAAQ,WAAf,sBACA,cAAC,IAAD,CACEC,KAAK,OACLtC,UAAU,eACVuC,KAAK,WACLxC,MAAOa,KAAKJ,MAAM1B,SAClB0D,SAAU5B,KAAKN,iBACfmC,YAAa,CAAC3C,QAIlB,sBAAKE,UAAU,aAAf,UACE,uBAAOqC,QAAQ,WAAf,sBACA,cAAC,IAAD,CACEC,KAAK,WACLtC,UAAU,eACVuC,KAAK,WACLxC,MAAOa,KAAKJ,MAAMzB,SAClByD,SAAU5B,KAAKL,iBACfkC,YAAa,CAAC3C,QAIlB,qBAAKE,UAAU,aAAf,SACE,yBACEA,UAAU,4BACV0C,SAAU9B,KAAKJ,MAAMC,QAFvB,UAIGG,KAAKJ,MAAMC,SACV,sBAAMT,UAAU,qCAElB,8CAIHY,KAAKJ,MAAME,SACV,qBAAKV,UAAU,aAAf,SACE,qBAAKA,UAAU,qBAAqBC,KAAK,QAAzC,SACGW,KAAKJ,MAAME,YAIlB,cAAC,IAAD,CACEiC,MAAO,CAAEC,QAAS,QAClBT,IAAK,SAAAC,GACH,EAAKlB,SAAWkB,iB,GA9HGS,aCjBpB,SAASC,IACtB,IAAMC,EAAOvD,KAAKI,MAAMN,aAAaO,QAAQ,SAE7C,OAAIkD,GAAQA,EAAK1D,YAER,CAAE,iBAAkB0D,EAAK1D,aAEzB,GCJX,IAAMR,EAAU,4DAoBD,M,2GAhBX,OAAOG,IAAMgE,IAAInE,EAAU,S,qCAI3B,OAAOG,IAAMgE,IAAInE,EAAU,OAAQ,CAAEoE,QAASH,Q,0CAI9C,OAAO9D,IAAMgE,IAAInE,EAAU,MAAO,CAAEoE,QAASH,Q,sCAI7C,OAAO9D,IAAMgE,IAAInE,EAAU,QAAS,CAAEoE,QAASH,U,MCf9BI,E,kDACnB,WAAY/C,GAAQ,IAAD,8BACjB,cAAMA,IAEDK,MAAQ,CACX2C,QAAS,IAJM,E,gEAQE,IAAD,OAClBC,EAAYC,mBAAmBnE,MAC7B,SAAAC,GACE,EAAK0B,SAAS,CACZsC,QAAShE,EAASC,UAGtB,SAAAyC,GACE,EAAKhB,SAAS,CACZsC,QACGtB,EAAM1C,UAAY0C,EAAM1C,SAASC,MAClCyC,EAAMnB,SACNmB,EAAME,kB,+BAOd,OACE,qBAAK/B,UAAU,YAAf,SACE,wBAAQA,UAAU,YAAlB,SACE,6BAAKY,KAAKJ,MAAM2C,kB,GA/BQN,aCAbS,E,kDACnB,WAAYnD,GAAQ,IAAD,8BACjB,cAAMA,IAEDK,MAAQ,CACX+C,SAAU,IACVC,WAAW,EACXC,YAAa,CAAE3E,SAAU,KANV,E,gEAWjB,IAAM2E,EAAcnC,EAAYoC,iBAE3BD,GAAa7C,KAAKC,SAAS,CAAE0C,SAAU,MAC5C3C,KAAKC,SAAS,CAAE4C,YAAaA,EAAaD,WAAW,M,+BAIrD,GAAI5C,KAAKJ,MAAM+C,SACb,OAAO,cAAC,IAAD,CAAUI,GAAI/C,KAAKJ,MAAM+C,WAF3B,IAKCE,EAAgB7C,KAAKJ,MAArBiD,YAER,OACE,qBAAKzD,UAAU,YAAf,SACIY,KAAKJ,MAAMgD,UACb,gCACA,wBAAQxD,UAAU,YAAlB,SACE,+BACE,iCAASyD,EAAY3E,WADvB,gBAIF,8BACE,4CAAwB,IACvB2E,EAAYpE,YAAYuE,UAAU,EAAG,IAFxC,OAEiD,IAC9CH,EAAYpE,YAAYwE,OAAOJ,EAAYpE,YAAYgC,OAAS,OAEnE,8BACE,yCAAqB,IACpBoC,EAAYK,MAEf,8BACE,4CAAwB,IACvBL,EAAY9D,SAEf,kDACA,6BACG8D,EAAYM,OACXN,EAAYM,MAAMC,KAAI,SAAC/D,EAAMgE,GAAP,OAAiB,6BAAiBhE,GAARgE,WAE9C,W,GApDuBpB,a,QCFtB7D,MAAMkF,OAAO,CAG1BC,QAAQ,mDACRC,aAAc,S,8DCEVC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,OAIP,SAASK,IACd,IAAMC,EAAUV,IAEhB,OACE,qBAAKrE,UAAW+E,EAAQP,KAAxB,SACE,cAACQ,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,KAAK,QAAQpF,UAAW+E,EAAQL,WAAYW,MAAM,UAAUC,aAAW,OAAnF,SACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKxF,UAAW+E,EAAQF,MAA5C,kC,4ICxBJY,I,MAASnE,EAAYoC,kBAGrBgC,GAAQ,SAACvF,GAAW,IAAD,EACOwF,mBAAS,IADhB,mBACdC,EADc,KACNC,EADM,KAErBC,qBAAU,WACNC,MACF,CAAC5F,EAAM6F,OAET,IAAMD,EAAO,yCAAG,+BAAAE,EAAA,yDACW,eAApBR,GAAO1B,MAAM,GADJ,gCAEemC,EAAIlD,IAAJ,8BAAuC,CAAEC,QAASH,MAFjE,OAEF3D,EAFE,OAGR0G,EAAU1G,EAASC,MAHX,uCAKW8G,EAAIlD,IAAJ,kCAAmCyC,GAAO3G,UAAY,CAAEmE,QAASH,MAL5E,OAKN3D,EALM,OAMZ0G,EAAU1G,EAASC,MANP,4CAAH,qDA0Cb,OACI,8BACI,wBAAO0E,GAAG,SAAV,UACI,gCACI,6BA5BQ,CAAC,mBAAoB,YAAa,OAAQ,MAAO,cAAc,OAAQ,aACtEE,KAAI,SAACmC,EAAKlC,GAC3B,OAAO,6BAAiBkC,EAAIC,eAAZnC,UA4BZ,gCAvBD2B,GAAUA,EAAO5B,KAAI,YAAmE,IAAhEF,EAA+D,EAA/DA,GAAIuC,EAA2D,EAA3DA,KAAMC,EAAqD,EAArDA,IAAKC,EAAgD,EAAhDA,WAAYC,EAAoC,EAApCA,gBAAiBf,EAAmB,EAAnBA,OAAQgB,EAAW,EAAXA,KAC/E,OACI,+BACI,6BAAKD,IACL,6BAAKf,IACL,6BAAKY,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKE,IACL,oBAAIzG,UAAU,YAAd,SACI,wBAAQA,UAAU,SAAS0G,QAAS,kBAzBrC,SAAC5C,GAChBoC,EAAIS,OAAJ,iCAAqC7C,GAAM,CAAEb,QAASH,MAAgB5D,MAAK,SAAA0H,GACvE,IAAMC,EAAMjB,EAAOkB,QAAO,SAAAC,GAAM,OAAIjD,IAAOiD,EAAOjD,MAClD+B,EAAUgB,MAsB4CG,CAAWlD,IAArD,wBARCA,cCtBnBO,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC0C,YAAa,CACXC,OAAQ3C,EAAMK,QAAQ,GACtBuC,SAAU,KAEZC,YAAa,CACXC,UAAW9C,EAAMK,QAAQ,GACzBJ,KAAM,CACJ,uBAAwB,CACtB0C,OAAQ3C,EAAMK,QAAQ,GACtB0C,MAAO,cAMR,SAASC,KACd,IAAMxC,EAAUV,KADgB,EAENsB,mBAAS,IAFH,mBAEzB6B,EAFyB,KAElBC,EAFkB,OAGA9B,mBAAS,CAAC,KAHV,mBAGzB+B,EAHyB,KAGfC,EAHe,OAIShC,mBAAS,QAJlB,mBAIzBiC,EAJyB,KAIVC,EAJU,OAKqBlC,mBAAS,QAL9B,mBAKzBmC,EALyB,KAKJC,EALI,OAMNpC,mBAAS,GANH,mBAMzBqC,EANyB,KAMlBC,EANkB,OAOJtC,mBAAS,IAPL,mBAOzBuC,EAPyB,KAOjBC,EAPiB,OAQRxC,oBAAS,GARD,mBAQzByC,EARyB,KAQnBC,EARmB,OASA1C,mBAAS,IATT,mBASzB2C,EATyB,KASfC,EATe,OAUJ5C,mBAAS,GAVL,mBAUzBoB,EAVyB,KAUjByB,GAViB,QAWR7C,mBAAS,IAXD,qBAWzBc,GAXyB,MAWnBgC,GAXmB,SAYgB9C,mBAAS,GAZzB,qBAYzB+C,GAZyB,MAYPC,GAZO,SAaJhD,oBAAS,GAbL,qBAazBiD,GAbyB,MAajBC,GAbiB,SAcwBlD,mBAAS,QAdjC,qBAczBmD,GAdyB,MAcHC,GAdG,SAeLpD,oBAAS,GAfJ,qBAezBqD,GAfyB,MAelBC,GAfkB,SAgBoBtD,mBAAS,QAhB7B,qBAgBzBuD,GAhByB,MAgBLC,GAhBK,MAkB5B1F,GAAcnC,EAAYoC,iBAe9BoC,qBAAU,WACRsD,OACC,CAAC,KAEJ,IAAMA,GAAkB,WACtBlD,EAAIlD,IAAI,2BAA6B,CAAEC,QAASH,MAC7C5D,MAAK,SAAAC,GACJsI,EAAStI,EAASC,SAEnBiK,OAAM,SAAA1I,GACL2I,QAAQC,IAAI5I,OAkFZ6I,GAAc,SAACC,EAAOC,GACX,cAAXA,GAGJrB,GAAQ,IAGV,OACE,gCACE,cAACvD,EAAD,IACA,cAAC6E,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAQC,QAASlB,GAAQpG,SAnHb,SAACiH,GAC1BZ,GAAUY,EAAM3I,OAAOgJ,SACnBL,EAAM3I,OAAOgJ,QAAWf,GAAwB,SAC7CA,GAAwB,SAgHqCxG,KAAK,WAAW8C,MAAM,YACtF0E,MAAM,qBAER,eAACC,EAAA,EAAD,CAAKpH,QAASkG,GAAsB9I,UAAW+E,EAAQP,KAAvD,UACE,eAACyF,EAAA,EAAD,CAAajK,UAAW+E,EAAQkC,YAAhC,UACE,cAACiD,EAAA,EAAD,CAAYpG,GAAG,2BAAf,sBACA,eAACqG,EAAA,EAAD,CACEC,QAAQ,2BACRtG,GAAG,qBACH/D,MAAO2H,EAASrB,KAChB7D,SAnGW,SAACiH,GACO,IAAvBA,EAAM3I,OAAOf,OACf4H,EAAY8B,EAAM3I,OAAOf,OAAS,IAClC8H,EAAgB,SAChBE,EAAsB,QACtBS,GAAU,GACVC,GAAQ,IACRF,EAAY,IACZI,GAAoB,GACpBV,EAAS,KAETN,EAAY8B,EAAM3I,OAAOf,OAAS,IAClC8H,EAAgB,QAChBE,EAAsB,SACtBS,GAAU,GACVC,GAAQ,IACRF,EAAY,IACZI,GAAoB,GACpBV,EAAS,KA6EL,UAKGT,GAASA,EAAMxD,KAAI,SAACqG,GAAD,OACpB,cAACC,EAAA,EAAD,CAAUvK,MAAOsK,EAAjB,SAA4CA,EAAOhE,MAArBgE,EAAOhE,SACrC,cAACiE,EAAA,EAAD,CAAUvK,MAAO,EAAjB,mBAAyB,gBAG7B,eAACiK,EAAA,EAAD,CAAKpH,QAASgF,EAAe5H,UAAW+E,EAAQP,KAAhD,UACE,cAAC+F,EAAA,EAAD,CAAWR,MAAM,WAAWS,gBAAiB,CAAEC,QAAQ,GAASC,WAAY,CAAEC,UAAU,GAASnF,QAAQ,SAASzF,MAAO2H,EAASrB,OAClI,cAACkE,EAAA,EAAD,CAAWR,MAAM,kBAAkBS,gBAAiB,CAAEC,QAAQ,GAASC,WAAY,CAAEC,UAAU,GAASnF,QAAQ,SAASzF,MAAO2H,EAASkD,aACzI,cAACL,EAAA,EAAD,CAAWR,MAAM,mBAAmBS,gBAAiB,CAAEC,QAAQ,GAASC,WAAY,CAAEC,UAAU,GAASnF,QAAQ,SAASzF,MAAO2H,EAASnB,WAAayB,IACvJ,cAACuC,EAAA,EAAD,CAAWrD,OAAO,QAAQ1E,SAAU,SAAA7B,GAAC,OAAIsH,EAAStH,EAAEG,OAAOf,QAAQA,MAAOiI,EAAO1F,KAAK,SAASuI,aAAa,IAAIrF,QAAQ,WAAWuE,MAAM,yBAAyBW,WAAY,CAAEI,WAAY,CAACC,IAAK,MAClM,cAACR,EAAA,EAAD,CAAWR,MAAM,OAAOhK,MAAO0G,GAAMjE,SAAU,SAAA7B,GAAC,OAAI8H,GAAQ9H,EAAEG,OAAOf,QAAQmH,OAAO,QAAQ5E,KAAK,SAASuI,aAAa,GAAGrF,QAAQ,aAClI,cAACwF,EAAA,EAAD,CAAQtE,QAAS,kBAzFL,SAACuE,EAAUxE,GAC7B,GAAc,IAAVuB,EAAa,CACf,IAAI5I,EAAO,CACT,KAAQ6L,EAAU5E,KAClB,OAAU5C,GAAY3E,SACtB,aAAgBmM,EAAU1E,WAC1B,IAAOyB,EACP,KAAQvB,EACR,UAAY,GAEdP,EAAIjH,KAAK,0BAA2BG,EAAO,CAAE6D,QAASH,MACnD5D,MAAK,SAAAC,GACoB,MAApBA,EAAS+L,SACX/C,EAAU,oBACVE,GAAQ,OAGXgB,OAAM,SAAA1I,GACLwH,EAAUxH,EAAED,SACZ2H,GAAQ,WAIVF,EAAU,uCACVE,GAAQ,GAiEiB8C,CAAYzD,EAASjB,KAAO2E,KAAK,QAAQzI,MAAO,CAAEC,QAAS,OAAQyI,gBAAiB,UAAWC,WAAY,SAAUC,eAAgB,UAAYC,UAAW,cAAC,IAAD,IAAqBhG,QAAQ,WAAhN,mCAIF,eAACwE,EAAA,EAAD,CAAKpH,QAASkF,EAAqB9H,UAAW+E,EAAQP,KAAtD,UACE,cAAC+F,EAAA,EAAD,CAAWzK,UAAQ,EAACC,MAAOuI,EAAUpB,OAAO,QAAQ1E,SAAU,SAAA7B,GAAC,OAAI4H,EAAY5H,EAAEG,OAAOf,QAAQuC,KAAK,SAASuI,aAAa,GAAGrF,QAAQ,WAAWuE,MAAM,kBACvJ,cAACQ,EAAA,EAAD,CAAWzK,UAAQ,EAACC,MAAO2I,GAAkBxB,OAAO,QAAQ1E,SAAU,SAAA7B,GAAC,OAAIgI,GAAoBhI,EAAEG,OAAOf,QAAQuC,KAAK,SAASuI,aAAa,IAAIrF,QAAQ,WAAWuE,MAAM,kBAAkBW,WAAY,CAAEI,WAAY,CAACC,IAAK,MAC1N,cAACR,EAAA,EAAD,CAAWzK,UAAQ,EAACC,MAAOgH,EAAQG,OAAO,QAAQ1E,SAAU,SAAA7B,GAAC,OAAI6H,GAAU7H,EAAEG,OAAOf,QAAQuC,KAAK,SAASuI,aAAa,IAAIrF,QAAQ,WAAWuE,MAAM,qBAAkBW,WAAY,CAAEI,WAAY,CAACC,IAAK,MACtM,cAACR,EAAA,EAAD,CAAWxK,MAAO0G,GAAMS,OAAO,QAAQ1E,SAAU,SAAA7B,GAAC,OAAI8H,GAAQ9H,EAAEG,OAAOf,QAAQuC,KAAK,SAASuI,aAAa,GAAGrF,QAAQ,WAAWuE,MAAM,SACtI,cAACiB,EAAA,EAAD,CAAQtE,QAAS,kBAtEC,SAAC4B,EAAUI,EAAkB3B,EAAQN,GAC7D,GAAe,IAAXM,EAAc,CAChB,IAAI0E,EAAa,CACf,KAAQnD,EACR,OAAU7E,GAAY3E,SACtB,aAAgB4J,EAChB,IAAO3B,EACP,KAAQN,EACR,UAAY,GAEdP,EAAIjH,KAAK,0BAA2BwM,EAAa,CAAExI,QAASH,MACzD5D,MAAK,SAAAC,GACoB,MAApBA,EAAS+L,SACX/C,EAAU,2BACVE,GAAQ,OAGXgB,OAAM,SAAA1I,GACLwH,EAAUxH,EAAED,SACZ2H,GAAQ,WAIVF,EAAU,uCACVE,GAAQ,GA8CiBqD,CAAkBpD,EAAUI,GAAkB3B,EAAQN,KAAO2E,KAAK,QAAQzI,MAAO,CAAEC,QAAS,OAAQyI,gBAAiB,UAAWC,WAAY,SAAUC,eAAgB,UAAYC,UAAW,cAAC,IAAD,IAAqBhG,QAAQ,WAAjP,qDAKJ,cAACmG,EAAA,EAAD,CAAUC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAAYpL,QAASwH,EAAQE,KAAMA,EAAM2D,iBAAkB,KAAMC,QAASxC,GAAa7G,MAAO,CAAE0I,gBAAiB,QAAShG,MAAO,WACxL,cAACsG,EAAA,EAAD,CAAUC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAAYpL,QAASwH,EAAQE,KAAMA,EAAM2D,iBAAkB,KAAMC,QAASxC,GAAa7G,MAAO,CAAE0I,gBAAiB,QAAShG,MAAO,WACxL,uBACA,cAACsE,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAQC,QAASd,GAAQxG,SArJZ,SAACiH,GAC3BR,GAAUQ,EAAM3I,OAAOgJ,SACnBL,EAAM3I,OAAOgJ,QAAWX,GAAsB,SAC3CA,GAAsB,SAkJwC5G,KAAK,WAAW8C,MAAM,YACvF0E,MAAM,sCAER,cAACC,EAAA,EAAD,CAAKpH,QAASsG,GAAoBlJ,UAAW+E,EAAQP,KAArD,SACQ,cAAC,GAAD,CAAOwB,KAAMgD,U,ICpNNiD,G,kDACnB,WAAY9L,GAAQ,IAAD,8BACjB,cAAMA,IAEDK,MAAQ,CACX2C,QAAS,IAJM,E,gEAQE,IAAD,OAClBC,EAAY8I,eAAehN,MACzB,SAAAC,GACE,EAAK0B,SAAS,CACZsC,QAAShE,EAASC,UAGtB,SAAAyC,GACE,EAAKhB,SAAS,CACZsC,QACGtB,EAAM1C,UACL0C,EAAM1C,SAASC,MACfyC,EAAM1C,SAASC,KAAKsB,SACtBmB,EAAMnB,SACNmB,EAAME,kB,+BAOd,OACM,cAACwF,GAAD,Q,GA/B6B1E,aCIjCwB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,OAIP,SAAS0H,KACd,IAAMpH,EAAUV,KAEhB,OACE,qBAAKrE,UAAW+E,EAAQP,KAAxB,SACE,cAACQ,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,KAAK,QAAQpF,UAAW+E,EAAQL,WAAYW,MAAM,UAAUC,aAAW,OAAnF,SACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKxF,UAAW+E,EAAQF,MAA5C,oC,UCvBJY,GAASnE,EAAYoC,iBAErB0I,GAAe,SAACjM,GAAW,IAAD,EACIwF,mBAAS,IADb,mBACrB2C,EADqB,KACXC,EADW,KAE5BzC,qBAAU,WACNC,MACF,CAAC5F,EAAMkM,QAET,IAAMtG,EAAU,WACZG,EAAIlD,IAAJ,6BAAsC,CAAEC,QAASH,MAC5C5D,MAAK,SAAA0H,GACiB,MAAfA,EAAIsE,OACe,eAApBzF,GAAO1B,MAAM,IACZwE,EAAY3B,EAAIxH,MAEE,MAAfwH,EAAIsE,QACX5B,QAAQC,IAAI,qBAGfF,OAAM,SAAAiD,GACyB,MAAxBA,EAAInN,SAAS+L,SACb5B,QAAQC,IAAI+C,GACZhL,EAAYiL,cAkC5B,OACI,8BACI,wBAAOzI,GAAG,eAAV,UACI,gCACI,6BAzBQ,CAAC,OAAQ,aAAc,cAAe,aACrCE,KAAI,SAACmC,EAAKlC,GAC3B,OAAO,6BAAiBkC,EAAIC,eAAZnC,UAyBZ,gCApBDqE,GAAYA,EAAStE,KAAI,YAA2C,IAAxCF,EAAuC,EAAvCA,GAAIuC,EAAmC,EAAnCA,KAAMuE,EAA6B,EAA7BA,WAAYrE,EAAiB,EAAjBA,WACrD,OACI,+BACI,6BAAKF,IACL,6BAAKuE,IACL,6BAAKrE,IACL,oBAAIvG,UAAU,YAAd,SACI,wBAAQA,UAAU,SAAS0G,QAAS,kBAtBrC,SAAC5C,GAChBoC,EAAIS,OAAJ,mCAAuC7C,GAAM,CAAEb,QAASH,MAAgB5D,MAAK,SAAA0H,GACzE,IAAMC,EAAMyB,EAASxB,QAAO,SAAAwB,GAAQ,OAAIxE,IAAOwE,EAASxE,MACxDyE,EAAY1B,MAmB0CG,CAAWlD,IAArD,wBALCA,cC5CnB2B,GAASnE,EAAYoC,iBAGrB8I,GAAkB,SAACrM,GAAW,IAAD,EACLwF,mBAAS,IADJ,mBACxB8G,EADwB,KACjBC,EADiB,KAE/B5G,qBAAU,WACNC,MACF,CAAC5F,EAAMwM,QAET,IAAM5G,EAAO,yCAAG,6BAAAE,EAAA,yDACW,eAApBR,GAAO1B,MAAM,GADJ,gCAEemC,EAAIlD,IAAJ,qBAA8B,CAAEC,QAASH,MAFxD,OAGgB,OADlB3D,EAFE,QAGK+L,OACbwB,EAASvN,EAASC,MACa,MAApBD,EAAS+L,QAChB5B,QAAQC,IAAI,kBANR,2CAAH,qDAwCb,OACI,8BACI,wBAAOzF,GAAG,QAAV,UACI,gCACI,6BAxBQ,CAAC,WAAY,QAAS,aACrBE,KAAI,SAACmC,EAAKlC,GAC3B,OAAO,6BAAiBkC,EAAIC,eAAZnC,UAwBZ,gCAnBDwI,GAASA,EAAMzI,KAAI,YAA6B,IAA1BF,EAAyB,EAAzBA,GAAIhF,EAAqB,EAArBA,SAAUa,EAAW,EAAXA,MACvC,OACI,+BACI,6BAAKb,IACL,6BAAKa,IACL,oBAAIK,UAAU,YAAd,SACI,wBAAQA,UAAU,SAAS0G,QAAS,kBArBrC,SAAC5H,GAChBoH,EAAIS,OAAJ,8BAAkC7H,GAAY,CAAEmE,QAASH,MAAgB5D,MAAK,SAAA0H,GAC1E,IAAMC,EAAM4F,EAAM3F,QAAO,SAAA2F,GAAK,OAAI3N,IAAa2N,EAAM3N,YACrD4N,EAAS7F,MAkB6CG,CAAWlI,IAArD,wBAJCgF,c,kBChCnB2B,I,OAASnE,EAAYoC,kBAErBkJ,GAAmB,SAACzM,GAAW,IAAD,EACJwF,mBAAS,IADL,mBACzBoB,EADyB,KACjByB,EADiB,OAER7C,mBAAS,GAFD,mBAEzBkH,EAFyB,KAEnBC,EAFmB,KAIhChH,qBAAU,WACNC,MACF,CAAC5F,EAAM4M,QAET,IAAMhH,EAAO,yCAAG,qCAAAE,EAAA,yDACR+G,EAAW,EACQ,eAApBvH,GAAO1B,MAAM,GAFJ,gCAGemC,EAAIlD,IAAJ,8BAAuC,CAAEC,QAASH,MAHjE,OAIR,IAASqD,KADHhH,EAHE,QAIiBC,KAErB,IAAS6N,KADLC,EAAI/N,EAASC,KAAK+G,GAEL,WAAT8G,IACAD,GAAsBE,EAAIC,QAIpChO,EAASC,KAAKqC,KAAK,CAAC2L,IAAK,SAAU9G,IAAK,EAAG6G,OAAQH,IACnDxE,EAAUrJ,EAASC,MACnB0N,EAAQO,OAAOC,KAAKnO,EAASC,MAAMiC,QAd7B,2CAAH,qDA+Db,OACI,gCACY,cAAC2J,EAAA,EAAD,CAAQtE,QAAS,kBA/CP,WACtB,IAAI6G,GAAQ,IAAIC,MAAOC,cAAcC,MAAM,EAAG,IAC1CC,EAAW,CAAC,MAAO,OAEnBA,EADCd,EAAO,GACG,CAAC,MAAO,OAER,CAAC,MAAO,OAEvBvD,QAAQC,IAAIoE,GACZjM,OAAOkM,SAAS,EAAE,GAClB,IAAMC,EAAQC,SAASC,eAAe,UAAU,CAACC,SAAUtM,OAAOsM,UAClEC,GAAYJ,GACP3O,MAAK,SAACgP,GACH,IAAMC,EAAUD,EAAOE,UAAU,aAC3BC,EAAM,IAAIC,SAAM,CAClBC,YAAa,IACbC,KAAM,KACNC,OAAQd,IAEZU,EAAIK,KAAJ,sCAAwCnB,GAAS,EAAG,IACpDc,EAAIM,SAASR,EAAS,OAAQ,EAAG,IACjCE,EAAIO,KAAJ,iBAAmBrB,EAAnB,YA0B2BsB,IAAqBzD,KAAK,QAAQzI,MAAO,CAAEC,QAAS,OAAQyI,gBAAiB,UAAWC,WAAY,SAAUC,eAAgB,UAAYC,UAAW,cAAC,IAAD,IAAqBhG,QAAQ,WAAzM,6BAGZ,qBAAK1B,GAAG,UAAR,SACI,wBAAOA,GAAG,SAAV,UACI,gCACI,6BA3BQ,CAAC,OAAQ,cAAY,mBAAoB,oBACxCE,KAAI,SAACmC,EAAKlC,GAC3B,OAAO,6BAAiBkC,EAAIC,eAAZnC,UA2BZ,gCAtBD8C,GAAUA,EAAO/C,KAAI,YAA4C,IAAzCoJ,EAAwC,EAAxCA,IAAK9G,EAAmC,EAAnCA,IAAK6G,EAA8B,EAA9BA,OAAQ3G,EAAsB,EAAtBA,gBAC7C,OACI,+BACI,6BAAK4G,IACL,6BAAK9G,IACL,6BAAK6G,IACL,6BAAK3G,MAJA4G,iB,uCCxDnB3H,GAASnE,EAAYoC,iBAErBoL,GAAiB,SAAC3O,GAAW,IAAD,EACFwF,mBAAS,IADP,mBACvBoB,EADuB,KACfyB,EADe,OAEU7C,qBAFV,mBAEvBoJ,EAFuB,KAETC,EAFS,OAGErJ,mBAAS,IAHX,mBAGvBsJ,EAHuB,KAGbC,EAHa,OAINvJ,mBAAS,GAJH,mBAIvBkH,EAJuB,KAIjBC,EAJiB,KAM9BhH,qBAAU,cAAS,CAAC3F,EAAMgP,SAE1B,IAOMpJ,EAAO,yCAAG,WAAOqJ,GAAP,wBAAAnJ,EAAA,yDACR+G,EAAS,EACU,eAApBvH,GAAO1B,MAAM,GAFJ,gCAGemC,EAAIlD,IAAJ,qCAAsCoM,GAAO,CAAEnM,QAASH,MAHvE,OAIR,IAASqD,KADHhH,EAHE,QAIiBC,KAErB,IAAS6N,KADLC,EAAI/N,EAASC,KAAK+G,GAEL,WAAT8G,IACAD,GAAsBE,EAAIC,QAIpChO,EAASC,KAAKqC,KAAK,CAAC2L,IAAK,SAAU9G,IAAK,EAAG6G,OAAQH,IACnDxE,EAAUrJ,EAASC,MACnB0N,EAAQO,OAAOC,KAAKnO,EAASC,MAAMiC,QAd7B,2CAAH,sDA8Db,OACI,sBAAKyC,GAAG,eAAR,UACA,cAACyG,EAAA,EAAD,CAAWC,gBAAiB,CAAEC,QAAQ,GAASC,WAAY,CAAEC,UAAU,GAASnF,QAAQ,WAAWzF,MAAM,mCACzG,cAAC,KAAD,CAAyBsP,MAAOC,KAAhC,SACI,cAAC,KAAD,CACIb,OAAO,WACPc,eAAe,EACfzL,GAAG,qBACH0L,aAAa,SACbhK,QAAQ,SACRzF,MAAOgP,EACPvM,SAhFa,SAACiN,GACtBT,EAAgBS,GAChB,IAAML,EAAMX,aAAOgB,EAAK,YACxB1J,EAAQqJ,GACRF,EAAY,UAAYE,IA6EhBM,oBAAqB,CACrB,aAAc,mBAItB,cAAC1E,EAAA,EAAD,CAAQtE,QAAS,kBA7DK,WACtB,IAAIiH,EAAW,CAAC,MAAO,OAEnBA,EADCd,EAAO,GACG,CAAC,MAAO,OAER,CAAC,MAAO,OAEvBvD,QAAQC,IAAIoE,GACZjM,OAAOkM,SAAS,EAAE,GAClB,IAAMC,EAAQC,SAASC,eAAe,UAAU,CAACC,SAAUtM,OAAOsM,UAClEC,GAAYJ,GACP3O,MAAK,SAACgP,GACH,IAAMC,EAAUD,EAAOE,UAAU,aAC3BC,EAAM,IAAIC,SAAM,CAClBC,YAAa,IACbC,KAAM,KACNC,OAAQd,IAEZU,EAAIK,KAAJ,sCAAwCO,GAAY,EAAG,IACvDZ,EAAIM,SAASR,EAAS,OAAQ,EAAG,IACjCE,EAAIO,KAAJ,UAAYK,EAAZ,YAyCeJ,IAAqBzD,KAAK,QAAQzI,MAAO,CAAEC,QAAS,OAAQyI,gBAAiB,UAAWC,WAAY,SAAUC,eAAgB,UAAYC,UAAW,cAAC,IAAD,IAAqBhG,QAAQ,WAAzM,6BAGA,qBAAK1B,GAAG,UAAR,SACI,wBAAOA,GAAG,SAAV,UACI,gCACI,6BA1CQ,CAAC,OAAQ,cAAY,mBAAoB,oBACxCE,KAAI,SAACmC,EAAKlC,GAC3B,OAAO,6BAAiBkC,EAAIC,eAAZnC,UA0CZ,gCArCD8C,GAAUA,EAAO/C,KAAI,YAA4C,IAAzCoJ,EAAwC,EAAxCA,IAAK9G,EAAmC,EAAnCA,IAAK6G,EAA8B,EAA9BA,OAAQ3G,EAAsB,EAAtBA,gBAC7C,OACI,+BACI,6BAAK4G,IACL,6BAAK9G,IACL,6BAAK6G,IACL,6BAAK3G,MAJA4G,iB,UCjFnBtN,GAAW,SAAAC,GACf,IAAKA,EACH,OACE,qBAAKC,UAAU,qBAAqBC,KAAK,QAAzC,sCAOAN,GAAQ,SAAAI,GACZ,IAAK4P,mBAAQ5P,GACX,OACE,qBAAKC,UAAU,qBAAqBC,KAAK,QAAzC,yCAOA2P,GAAY,SAAA7P,GAChB,GAAIA,EAAMsB,OAAS,GAAKtB,EAAMsB,OAAS,GACrC,OACE,qBAAKrB,UAAU,qBAAqBC,KAAK,QAAzC,gEAOA4P,GAAY,SAAA9P,GAChB,GAAIA,EAAMsB,OAAS,GAAKtB,EAAMsB,OAAS,GACrC,OACE,qBAAKrB,UAAU,qBAAqBC,KAAK,QAAzC,gEAOe6P,G,kDACnB,WAAY3P,GAAQ,IAAD,8BACjB,cAAMA,IACD4P,eAAiB,EAAKA,eAAe1P,KAApB,gBACtB,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBACxB,EAAK2P,cAAgB,EAAKA,cAAc3P,KAAnB,gBACrB,EAAKE,iBAAmB,EAAKA,iBAAiBF,KAAtB,gBAExB,EAAKG,MAAQ,CACX1B,SAAU,GACVa,MAAO,GACPZ,SAAU,GACVkR,YAAY,EACZvP,QAAS,IAZM,E,6DAgBFC,GACfC,KAAKC,SAAS,CACZ/B,SAAU6B,EAAEG,OAAOf,U,oCAITY,GACZC,KAAKC,SAAS,CACZlB,MAAOgB,EAAEG,OAAOf,U,uCAIHY,GACfC,KAAKC,SAAS,CACZ9B,SAAU4B,EAAEG,OAAOf,U,qCAIRY,GAAI,IAAD,OAChBA,EAAEI,iBAEFH,KAAKC,SAAS,CACZH,QAAS,GACTuP,YAAY,IAGdrP,KAAKI,KAAKC,cAEmC,IAAzCL,KAAKM,SAASC,QAAQC,QAAQC,QAChCC,EAAY4O,SACVtP,KAAKJ,MAAM1B,SACX8B,KAAKJ,MAAMb,MACXiB,KAAKJ,MAAMzB,UACXG,MACA,SAAAC,GACE,EAAK0B,SAAS,CACZH,QAASvB,EAASC,KAAKsB,QACvBuP,YAAY,OAGhB,SAAApO,GACE,IAAMC,EACHD,EAAM1C,UACL0C,EAAM1C,SAASC,MACfyC,EAAM1C,SAASC,KAAKsB,SACtBmB,EAAMnB,SACNmB,EAAME,WAER,EAAKlB,SAAS,CACZoP,YAAY,EACZvP,QAASoB,S,+BAOT,IAAD,OACP,OACE,qBAAK9B,UAAU,YAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,qBACEgC,IAAI,8CACJC,IAAI,cACJjC,UAAU,qBAGZ,eAAC,IAAD,CACEkC,SAAUtB,KAAKmP,eACf5N,IAAK,SAAAC,GACH,EAAKpB,KAAOoB,GAHhB,WAMIxB,KAAKJ,MAAMyP,YACX,gCACE,sBAAKjQ,UAAU,aAAf,UACE,uBAAOqC,QAAQ,WAAf,sBACA,cAAC,IAAD,CACEC,KAAK,OACLtC,UAAU,eACVuC,KAAK,WACLxC,MAAOa,KAAKJ,MAAM1B,SAClB0D,SAAU5B,KAAKN,iBACfmC,YAAa,CAAC3C,GAAU8P,SAI5B,sBAAK5P,UAAU,aAAf,UACE,uBAAOqC,QAAQ,QAAf,mBACA,cAAC,IAAD,CACEC,KAAK,OACLtC,UAAU,eACVuC,KAAK,QACLxC,MAAOa,KAAKJ,MAAMb,MAClB6C,SAAU5B,KAAKoP,cACfvN,YAAa,CAAC3C,GAAUH,SAI5B,sBAAKK,UAAU,aAAf,UACE,uBAAOqC,QAAQ,WAAf,sBACA,cAAC,IAAD,CACEC,KAAK,WACLtC,UAAU,eACVuC,KAAK,WACLxC,MAAOa,KAAKJ,MAAMzB,SAClByD,SAAU5B,KAAKL,iBACfkC,YAAa,CAAC3C,GAAU+P,SAI5B,qBAAK7P,UAAU,aAAf,SACE,wBAAQA,UAAU,4BAAlB,0BAKLY,KAAKJ,MAAME,SACV,qBAAKV,UAAU,aAAf,SACE,qBACEA,UACEY,KAAKJ,MAAMyP,WACP,sBACA,qBAENhQ,KAAK,QANP,SAQGW,KAAKJ,MAAME,YAIlB,cAAC,IAAD,CACEiC,MAAO,CAAEC,QAAS,QAClBT,IAAK,SAAAC,GACH,EAAKlB,SAAWkB,iB,GAvJMS,aC9BhCwB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC0C,YAAa,CACXC,OAAQ3C,EAAMK,QAAQ,GACtBuC,SAAU,KAEZC,YAAa,CACXC,UAAW9C,EAAMK,QAAQ,GACzBJ,KAAM,CACJ,uBAAwB,CACtB0C,OAAQ3C,EAAMK,QAAQ,GACtB0C,MAAO,cAMA,SAAS6I,KACtB,IAAMpL,EAAUV,KADuB,EAEfsB,mBAAS,IAFM,mBAEhCU,EAFgC,KAE1B+J,EAF0B,OAGHzK,mBAAS,GAHN,mBAGhCiF,EAHgC,KAGpByF,EAHoB,OAKa1K,mBAAS,QALtB,mBAKhC2K,EALgC,KAKZC,EALY,OAMH5K,mBAAS,GANN,mBAMhCY,EANgC,KAMpBiK,EANoB,OAQX7K,mBAAS,IARE,mBAQhCuC,EARgC,KAQxBC,EARwB,OASfxC,oBAAS,GATM,mBAShCyC,EATgC,KAS1BC,EAT0B,OAcX1C,oBAAS,GAdE,mBAchCiD,EAdgC,KAcxBC,EAdwB,OAeiBlD,mBAAS,QAf1B,mBAehCmD,EAfgC,KAeVC,EAfU,OAgBZpD,oBAAS,GAhBG,mBAgBhCqD,EAhBgC,KAgBzBC,EAhByB,OAiBetD,mBAAS,QAjBxB,mBAiBhC8K,EAjBgC,KAiBXC,EAjBW,OAkBZ/K,oBAAS,GAlBG,oBAkBhCgL,GAlBgC,MAkBzBC,GAlByB,SAmBqBjL,mBAAS,QAnB9B,qBAmBhCkL,GAnBgC,MAmBRC,GAnBQ,SAoBZnL,oBAAS,GApBG,qBAoBhCoL,GApBgC,MAoBzBC,GApByB,MA4EjCxH,GAAc,SAACC,EAAOC,GACX,cAAXA,GAGJrB,GAAQ,IAGV,OACE,gCACE,cAAC8D,GAAD,IACA,cAACxC,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAQC,QAASlB,EAAQpG,SA/Db,SAACiH,GAC1BZ,EAAUY,EAAM3I,OAAOgJ,SACnBL,EAAM3I,OAAOgJ,QAAWf,EAAwB,SAC7CA,EAAwB,SA4DqCxG,KAAK,WAAW8C,MAAM,YACtF0E,MAAM,sBAER,eAACC,EAAA,EAAD,CAAKpH,QAASkG,EAAsB9I,UAAW+E,EAAQP,KAAvD,UACA,cAAC,GAAD,CAAc6H,MAAOzD,IAEjB,cAAC2B,EAAA,EAAD,CAAWzK,UAAQ,EAACiK,MAAM,cAAcvE,QAAQ,WAAWzF,MAAOsG,EAAMa,OAAO,QAAQ5E,KAAK,SAASuI,aAAa,GAAGrI,SAAU,SAAA7B,GAAC,OAAIyP,EAAQzP,EAAEG,OAAOf,UACrJ,cAACwK,EAAA,EAAD,CAAWzK,UAAQ,EAACiK,MAAM,kBAAkBvE,QAAQ,WAAWzF,MAAO6K,EAAY1D,OAAO,QAAQ5E,KAAK,SAASuI,aAAa,GAAGrI,SAAU,SAAA7B,GAAC,OAAI0P,EAAc1P,EAAEG,OAAOf,UACrK,cAACwK,EAAA,EAAD,CAAWzK,UAAQ,EAACiK,MAAM,mBAAmBvE,QAAQ,WAAWzF,MAAOwG,EAAYW,OAAO,QAAQ5E,KAAK,SAASuI,aAAa,GAAGrI,SAAU,SAAA7B,GAAC,OAAI6P,EAAc7P,EAAEG,OAAOf,UACtK,cAACiL,EAAA,EAAD,CAAQtE,QAAS,kBAhDG,SAACL,EAAKuE,EAAWrE,GAC3C,GAAa,KAATF,EAAa,CACf,IAAIjH,EAAO,CACT,KAAQiH,EACR,WAAcuE,EACd,WAAcrE,GAEhBL,EAAIjH,KAAK,4BAA6BG,EAAM,CAAE6D,QAASH,MACpD5D,MAAK,SAAAC,GACoB,MAApBA,EAAS+L,QACX/C,EAAU,sBACVE,GAAQ,IACqB,MAApBlJ,EAAS+L,SAClB/C,EAAU,kDACVE,GAAQ,OAGXgB,OAAM,SAAA1I,GACLwH,EAAUxH,EAAED,SACZ2H,GAAQ,WAIVF,EAAU,0CACVE,GAAQ,GAwBiB4I,CAAmB5K,EAAKuE,EAAWrE,IAAa6E,KAAK,QAAQzI,MAAO,CAAEC,QAAS,OAAQyI,gBAAiB,UAAWC,WAAY,SAAUC,eAAgB,UAAYC,UAAW,cAAC,IAAD,IAAqBhG,QAAQ,WAApO,sCAIJ,uBACA,cAACmE,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAQC,QAASd,EAAQxG,SAxEZ,SAACiH,GAC3BR,EAAUQ,EAAM3I,OAAOgJ,SACnBL,EAAM3I,OAAOgJ,QAAWyG,EAAsB,SAC3CA,EAAsB,SAqEwChO,KAAK,WAAW8C,MAAM,YACvF0E,MAAM,gCAER,eAACC,EAAA,EAAD,CAAKpH,QAAS0N,EAAoBtQ,UAAW+E,EAAQP,KAArD,UACA,cAAC,GAAD,CAAiBmI,MAAO3D,IACpB,cAAC,GAAD,OAEF,uBACA,cAACW,EAAA,EAAD,CACAC,QAAS,cAACC,EAAA,EAAD,CAAQC,QAAS6G,GAAQnO,SA3EZ,SAACiH,GAC3BmH,GAAUnH,EAAM3I,OAAOgJ,SACnBL,EAAM3I,OAAOgJ,QAAW4G,EAAuB,SAC5CA,EAAuB,SAwEuCnO,KAAK,WAAW8C,MAAM,YACvF0E,MAAM,uBAEN,cAACC,EAAA,EAAD,CAAKpH,QAAS6N,EAAqBzQ,UAAW+E,EAAQP,KAAtD,SACE,cAAC,GAAD,CAAkBuI,MAAO4D,OAE3B,uBACA,cAAChH,EAAA,EAAD,CACAC,QAAS,cAACC,EAAA,EAAD,CAAQC,QAASiH,GAAQvO,SA7EZ,SAACiH,GAC3BuH,GAAUvH,EAAM3I,OAAOgJ,SACnBL,EAAM3I,OAAOgJ,QAAWgH,GAA0B,SAC/CA,GAA0B,SA0EoCvO,KAAK,WAAW8C,MAAM,YACvF0E,MAAM,kBAEN,cAACC,EAAA,EAAD,CAAKpH,QAASiO,GAAwB7Q,UAAW+E,EAAQP,KAAzD,SACE,cAAC,GAAD,CAAgB2K,OAAQ4B,OAG5B,cAACpF,EAAA,EAAD,CAAUC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAAYpL,QAASwH,EAAQE,KAAMA,EAAM2D,iBAAkB,KAAMC,QAASxC,GAAa7G,MAAO,CAAE0I,gBAAiB,QAAShG,MAAO,WACxL,cAACsG,EAAA,EAAD,CAAUC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAAYpL,QAASwH,EAAQE,KAAMA,EAAM2D,iBAAkB,KAAMC,QAASxC,GAAa7G,MAAO,CAAE0I,gBAAiB,QAAShG,MAAO,c,IC7JzK6L,G,kDACnB,WAAY/Q,GAAQ,IAAD,8BACjB,cAAMA,IAEDK,MAAQ,CACX2C,QAAS,IAJM,E,gEAQE,IAAD,OAClBC,EAAY+N,gBAAgBjS,MAC1B,SAAAC,GACE,EAAK0B,SAAS,CACZsC,QAAShE,EAASC,UAGtB,SAAAyC,GACE,EAAKhB,SAAS,CACZsC,QACGtB,EAAM1C,UACL0C,EAAM1C,SAASC,MACfyC,EAAM1C,SAASC,KAAKsB,SACtBmB,EAAMnB,SACNmB,EAAME,kB,+BAOd,OACE,cAACoO,GAAD,Q,GA/BkCtN,aC6HzBuO,G,kDArHb,WAAYjR,GAAQ,IAAD,8BACjB,cAAMA,IACDkR,OAAS,EAAKA,OAAOhR,KAAZ,gBAEd,EAAKG,MAAQ,CAEX8Q,gBAAgB,EAChB7N,iBAAa8N,GAPE,E,gEAYjB,IAAMxO,EAAOzB,EAAYoC,iBAErBX,GACFnC,KAAKC,SAAS,CACZ4C,YAAaV,EAEbuO,eAAgBvO,EAAKgB,MAAMyN,SAAS,kB,+BAMxClQ,EAAYiL,W,+BAGJ,IAAD,EAGc3L,KAAKJ,MAFlBiD,EADD,EACCA,YAEN6N,EAHK,EAGLA,eAEF,OACE,gCACE,sBAAKtR,UAAU,2CAAf,UACE,cAAC,IAAD,CAAM2D,GAAI,IAAK3D,UAAU,eAAzB,6BAGA,sBAAKA,UAAU,qBAAf,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAM2D,GAAI,QAAS3D,UAAU,WAA7B,oBAaDsR,GACC,oBAAItR,UAAU,WAAd,SACE,cAAC,IAAD,CAAM2D,GAAI,SAAU3D,UAAU,WAA9B,2BAMHyD,GACC,oBAAIzD,UAAU,WAAd,SACE,cAAC,IAAD,CAAM2D,GAAI,QAAS3D,UAAU,WAA7B,uBAOLyD,EACC,qBAAKzD,UAAU,qBAAf,SAME,oBAAIA,UAAU,WAAd,SACE,mBAAGyR,KAAK,IAAIzR,UAAU,WAAW0G,QAAS9F,KAAKyQ,OAA/C,wBAMJ,qBAAKrR,UAAU,qBAAf,SACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAM2D,GAAI,SAAU3D,UAAU,WAA9B,0BAeN,8BACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO0R,OAAK,EAACC,KAAM,CAAC,IAAK,SAAUC,UAAW1O,IAC9C,cAAC,IAAD,CAAOwO,OAAK,EAACC,KAAK,SAASC,UAAW1R,IAEtC,cAAC,IAAD,CAAOwR,OAAK,EAACC,KAAK,WAAWC,UAAWtO,IACxC,cAAC,IAAD,CAAOqO,KAAK,QAAQC,UAAW3F,KAE/B,cAAC,IAAD,CAAO0F,KAAK,SAASC,UAAWV,iB,GA9G1BrO,aCCEgP,QACW,cAA7BnQ,OAAOC,SAASmQ,UAEe,UAA7BpQ,OAAOC,SAASmQ,UAEhBpQ,OAAOC,SAASmQ,SAASC,MACvB,2DCXNC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,GAAD,MAEFnE,SAASC,eAAe,SDwHpB,kBAAmBmE,WACrBA,UAAUC,cAAcC,MACrBlT,MAAK,SAAAmT,GACJA,EAAaC,gBAEdjJ,OAAM,SAAAxH,GACLyH,QAAQzH,MAAMA,EAAMnB,a","file":"static/js/main.038c5581.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"https://heroku-be-gestione-ordini.herokuapp.com/api/auth/\";\r\n\r\nclass AuthService {\r\n  login(username, password) {\r\n    return axios\r\n      .post(API_URL + \"signin\", {\r\n        username,\r\n        password\r\n      })\r\n      .then(response => {\r\n        if (response.data.accessToken) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  register(username, email, password) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      username,\r\n      email,\r\n      password\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.login(this.state.username, this.state.password).then(\r\n        () => {\r\n          this.props.history.push(\"/\");\r\n          window.location.reload();\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            loading: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleLogin}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\">Username</label>\r\n              <Input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"username\"\r\n                value={this.state.username}\r\n                onChange={this.onChangeUsername}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.state.loading}\r\n              >\r\n                {this.state.loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Login</span>\r\n              </button>\r\n            </div>\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default function authHeader() {\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n  if (user && user.accessToken) {\r\n    // return { Authorization: 'Bearer ' + user.accessToken }; // for Spring Boot back-end\r\n    return { 'x-access-token': user.accessToken };       // for Node.js Express back-end\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n","import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nconst API_URL = 'https://heroku-be-gestione-ordini.herokuapp.com/api/test/';\r\n\r\nclass UserService {\r\n  getPublicContent() {\r\n    return axios.get(API_URL + 'all');\r\n  }\r\n\r\n  getUserBoard() {\r\n    return axios.get(API_URL + 'user', { headers: authHeader() });\r\n  }\r\n\r\n  getModeratorBoard() {\r\n    return axios.get(API_URL + 'mod', { headers: authHeader() });\r\n  }\r\n\r\n  getAdminBoard() {\r\n    return axios.get(API_URL + 'admin', { headers: authHeader() });\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getPublicContent().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response && error.response.data) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      redirect: \"/\",\r\n      userReady: false,\r\n      currentUser: { username: \"\" }\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const currentUser = AuthService.getCurrentUser();\r\n\r\n    if (!currentUser) this.setState({ redirect: \"/\" });\r\n    this.setState({ currentUser: currentUser, userReady: true })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to={this.state.redirect} />\r\n    }\r\n\r\n    const { currentUser } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        {(this.state.userReady) ?\r\n        <div>\r\n        <header className=\"jumbotron\">\r\n          <h3>\r\n            <strong>{currentUser.username}</strong> Profile\r\n          </h3>\r\n        </header>\r\n        <p>\r\n          <strong>Token:</strong>{\" \"}\r\n          {currentUser.accessToken.substring(0, 20)} ...{\" \"}\r\n          {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\r\n        </p>\r\n        <p>\r\n          <strong>Id:</strong>{\" \"}\r\n          {currentUser.id}\r\n        </p>\r\n        <p>\r\n          <strong>Email:</strong>{\" \"}\r\n          {currentUser.email}\r\n        </p>\r\n        <strong>Authorities:</strong>\r\n        <ul>\r\n          {currentUser.roles &&\r\n            currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\r\n        </ul>\r\n      </div>: null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  //baseURL: `http://localhost:8082/api/gestione-ordini/`,\r\n  //baseURL: `http://localhost:8081/`,\r\n  baseURL: `https://heroku-be-gestione-ordini.herokuapp.com/`,\r\n  responseType: \"json\"\r\n});","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Pagina ordini\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport API from './api';\r\nimport './mytable.css'\r\nimport AuthService from \"./services/auth.service\";\r\nimport authHeader from './services/auth-header';\r\n\r\nconst seller = AuthService.getCurrentUser();\r\n\r\n//const seller=\"angelo\";\r\nconst Table = (props) => {\r\n    const [ordini, setOrdini] = useState([])\r\n    useEffect(() => {\r\n        getData()\r\n    },[props.trig])\r\n\r\n    const getData = async () => {\r\n        if(seller.roles[0] === \"ROLE_ADMIN\"){\r\n            const response = await API.get(`/gestione-ordini/ordine/all`, { headers: authHeader() })\r\n            setOrdini(response.data)\r\n        } else {\r\n        const response = await API.get(`/gestione-ordini/ordini/${seller.username}`, { headers: authHeader() })\r\n        setOrdini(response.data)\r\n        }\r\n    }\r\n\r\n    const removeData = (id) => {\r\n        API.delete(`gestione-ordini/ordine/${id}`, { headers: authHeader() }).then(res => {\r\n            const del = ordini.filter(ordine => id !== ordine.id)\r\n            setOrdini(del)\r\n        })\r\n    }\r\n\r\n    const renderHeader = () => {\r\n        let headerElement = ['data inserimento', 'venditore', 'desc', 'qty', 'peso totale','note', 'operation']\r\n        return headerElement.map((key, index) => {\r\n            return <th key={index}>{key.toUpperCase()}</th>\r\n        })\r\n    }\r\n\r\n    const renderBody = () => {\r\n        return ordini && ordini.map(({ id, desc, qty, pesoTotale, dataInserimento, seller, note }) => {\r\n            return (\r\n                <tr key={id}>\r\n                    <td>{dataInserimento}</td>\r\n                    <td>{seller}</td>\r\n                    <td>{desc}</td>\r\n                    <td>{qty}</td>\r\n                    <td>{pesoTotale}</td>\r\n                    <td>{note}</td>\r\n                    <td className='operation'>\r\n                        <button className='button' onClick={() => removeData(id)}>Delete</button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <table id='ordini'>\r\n                <thead>\r\n                    <tr>{renderHeader()}</tr>\r\n                </thead>\r\n                <tbody>\r\n                    {renderBody()}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport { Table };","import React, { useState, useEffect } from \"react\";\r\nimport API from './api';\r\nimport { ButtonAppBar } from './AppBar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { Table } from './MyTable';\r\nimport AuthService from \"./services/auth.service\";\r\n//import { Redirect } from \"react-router-dom\";\r\nimport authHeader from './services/auth-header';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n  }\r\n}));\r\n\r\nexport function SellerComponent() {\r\n  const classes = useStyles();\r\n  const [items, setItems] = useState([]);\r\n  const [selected, setSelected] = useState(['']);\r\n  const [boxVisibility, setBoxVisiblity] = useState(\"none\");\r\n  const [boxCustomVisibility, setBoxCustomVisiblity] = useState(\"none\");\r\n  const [order, setOrder] = useState(0);\r\n  const [result, setResult] = useState('');\r\n  const [open, setOpen] = useState(false);\r\n  const [prodotto, setProdotto] = useState('');\r\n  const [ordine, setOrdine] = useState(0);\r\n  const [note, setNote] = useState('');\r\n  const [pesoTotaleCustom, setPesoTotaleCustom] = useState(0);\r\n  const [checkA, setCheckA] = useState(false);\r\n  const [boxProductVisibility, setBoxProductVisibility] = useState(\"none\");\r\n  const [checkB,setCheckB] = useState(false);\r\n  const [boxOrderVisibility, setBoxOrderVisibility] = useState(\"none\");\r\n  \r\nconst currentUser = AuthService.getCurrentUser();\r\n//const currentUser =  \"angelo\";\r\n\r\n  const handleSwitchChange = (event) => {\r\n    setCheckA(event.target.checked);\r\n    if (event.target.checked) { setBoxProductVisibility(\"block\"); }\r\n    else { setBoxProductVisibility(\"none\"); }\r\n  };\r\n\r\n  const handleSwitchBChange = (event) => {\r\n    setCheckB(event.target.checked);\r\n    if (event.target.checked) { setBoxOrderVisibility(\"block\"); }\r\n    else { setBoxOrderVisibility(\"none\"); }\r\n  };\r\n\r\n  useEffect(() => {\r\n    retrieveProduct();\r\n  }, ['']);\r\n\r\n  const retrieveProduct = () => {\r\n    API.get('gestione-ordini/prodotti',  { headers: authHeader() })\r\n      .then(response => {\r\n        setItems(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    if (event.target.value !== 2) {\r\n      setSelected(event.target.value || '');\r\n      setBoxVisiblity(\"block\");\r\n      setBoxCustomVisiblity(\"none\");\r\n      setOrdine(0);\r\n      setNote('');\r\n      setProdotto('');\r\n      setPesoTotaleCustom(0);\r\n      setOrder(0);\r\n    } else {\r\n      setSelected(event.target.value || '');\r\n      setBoxVisiblity(\"none\");\r\n      setBoxCustomVisiblity(\"block\");\r\n      setOrdine(0);\r\n      setNote('');\r\n      setProdotto('');\r\n      setPesoTotaleCustom(0);\r\n      setOrder(0);\r\n    }\r\n  };\r\n\r\n  const handleClick = (selection,note) => {\r\n    if (order !== 0) {\r\n      let data = {\r\n        \"desc\": selection.desc,\r\n        \"seller\": currentUser.username,\r\n        \"pesoProdotto\": selection.pesoTotale,\r\n        \"qty\": order,\r\n        \"note\": note,\r\n        \"isCustom\": false\r\n      };\r\n      API.post('gestione-ordini/ordine/', data,  { headers: authHeader() })\r\n        .then(response => {\r\n          if (response.status === 200) {\r\n            setResult(\"Ordine inserito!\")\r\n            setOpen(true);\r\n          }\r\n        })\r\n        .catch(e => {\r\n          setResult(e.message)\r\n          setOpen(true);\r\n          //console.log(e);\r\n        });\r\n    } else {\r\n        setResult(\"L'ordine non può essere vuoto...\")\r\n        setOpen(true);\r\n      }\r\n  }\r\n\r\n  const handleCustomClick = (prodotto, pesoTotaleCustom, ordine, note) => {\r\n    if (ordine !== 0) {\r\n      let customData = {\r\n        \"desc\": prodotto,\r\n        \"seller\": currentUser.username,\r\n        \"pesoProdotto\": pesoTotaleCustom,\r\n        \"qty\": ordine,\r\n        \"note\": note,\r\n        \"isCustom\": true\r\n      };\r\n      API.post('gestione-ordini/ordine/', customData,  { headers: authHeader() })\r\n        .then(response => {\r\n          if (response.status === 200) {\r\n            setResult(\"Ordine custom inserito!\")\r\n            setOpen(true);\r\n          }\r\n        })\r\n        .catch(e => {\r\n          setResult(e.message)\r\n          setOpen(true);\r\n          //console.log(e);\r\n        });\r\n    } else {\r\n        setResult(\"L'ordine non può essere vuoto...\")\r\n        setOpen(true);\r\n    }\r\n  }\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ButtonAppBar />\r\n      <FormControlLabel\r\n        control={<Switch checked={checkA} onChange={handleSwitchChange} name=\"checkedA\" color=\"primary\" />}\r\n        label=\"Inserisci ordini\"\r\n      />\r\n      <Box display={boxProductVisibility} className={classes.root}>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id=\"demo-simple-select-label\">Prodotti</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={selected.desc}\r\n            onChange={handleChange}>\r\n            {items && items.map((myData) => (\r\n            <MenuItem value={myData} key={myData.desc}>{myData.desc}</MenuItem>))}\r\n            <MenuItem value={2} key={\"custom\"}>Custom</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <Box display={boxVisibility} className={classes.root}>\r\n          <TextField label=\"Prodotto\" InputLabelProps={{ shrink: true, }} InputProps={{ readOnly: true, }} variant=\"filled\" value={selected.desc}></TextField>\r\n          <TextField label=\"Grammatura (gr)\" InputLabelProps={{ shrink: true, }} InputProps={{ readOnly: true, }} variant=\"filled\" value={selected.grammatura}></TextField>\r\n          <TextField label=\"Peso Totale (gr)\" InputLabelProps={{ shrink: true, }} InputProps={{ readOnly: true, }} variant=\"filled\" value={selected.pesoTotale * order}></TextField>\r\n          <TextField margin=\"dense\" onChange={e => setOrder(e.target.value)} value={order} type=\"number\" defaultValue=\"0\" variant=\"outlined\" label=\"Inserisci qui l'ordine\" InputProps={{ inputProps: {min: 0} }}></TextField>\r\n          <TextField label=\"Note\" value={note} onChange={e => setNote(e.target.value)} margin=\"dense\" type=\"string\" defaultValue=\"\" variant=\"outlined\" ></TextField>\r\n          <Button onClick={() => handleClick(selected,note)} size=\"large\" style={{ display: 'flex', backgroundColor: \"#3f51b5\", alignItems: 'center', justifyContent: 'center' }} startIcon={<CloudUploadIcon />} variant=\"outlined\">\r\n            Inserisci l'ordine\r\n          </Button>\r\n        </Box>\r\n        <Box display={boxCustomVisibility} className={classes.root}>\r\n          <TextField required value={prodotto} margin=\"dense\" onChange={e => setProdotto(e.target.value)} type=\"string\" defaultValue=\"\" variant=\"outlined\" label=\"Nome prodotto\"></TextField>\r\n          <TextField required value={pesoTotaleCustom} margin=\"dense\" onChange={e => setPesoTotaleCustom(e.target.value)} type=\"number\" defaultValue=\"0\" variant=\"outlined\" label=\"Peso totale(gr)\" InputProps={{ inputProps: {min: 0} }}></TextField>\r\n          <TextField required value={ordine} margin=\"dense\" onChange={e => setOrdine(e.target.value)} type=\"number\" defaultValue=\"0\" variant=\"outlined\" label=\"Quantità(pezzi)\" InputProps={{ inputProps: {min: 0} }}></TextField>\r\n          <TextField value={note} margin=\"dense\" onChange={e => setNote(e.target.value)} type=\"string\" defaultValue=\"\" variant=\"outlined\" label=\"Note\"></TextField>\r\n          <Button onClick={() => handleCustomClick(prodotto, pesoTotaleCustom, ordine, note)} size=\"large\" style={{ display: 'flex', backgroundColor: \"#3f51b5\", alignItems: 'center', justifyContent: 'center' }} startIcon={<CloudUploadIcon />} variant=\"outlined\">\r\n            Inserisci l'ordine personalizzato\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n      <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }} message={result} open={open} autoHideDuration={3500} onClose={handleClose} style={{ backgroundColor: 'green', color: 'black' }}></Snackbar>\r\n      <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }} message={result} open={open} autoHideDuration={3500} onClose={handleClose} style={{ backgroundColor: 'green', color: 'black' }}></Snackbar>\r\n      <br></br>\r\n      <FormControlLabel\r\n        control={<Switch checked={checkB} onChange={handleSwitchBChange} name=\"checkedB\" color=\"primary\" />}\r\n        label=\"Rivedi/modifica l'ordine inserito\"\r\n      />\r\n      <Box display={boxOrderVisibility} className={classes.root}>\r\n              <Table trig={checkB} />\r\n      </Box>\r\n    </div>\r\n  )\r\n}","import React, { Component } from \"react\";\r\nimport UserService from \"../services/user.service\";\r\nimport { SellerComponent } from '../SellerComponent'\r\n\r\nexport default class BoardUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getUserBoard().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n          <SellerComponent />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport function AdminAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Admin Dashboard\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport API from './api';\r\nimport './mytable.css'\r\nimport './other2_table.css'\r\nimport AuthService from \"./services/auth.service\";\r\nimport authHeader from './services/auth-header';\r\n\r\nconst seller = AuthService.getCurrentUser();\r\n\r\nconst ProductTable = (props) => {\r\n    const [prodotto, setProdotto] = useState([])\r\n    useEffect(() => {\r\n        getData()\r\n    },[props.trigP])\r\n\r\n    const getData = () => {\r\n        API.get(`/gestione-ordini/prodotti/`, { headers: authHeader() })\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                if(seller.roles[0] === \"ROLE_ADMIN\") {\r\n                    setProdotto(res.data)\r\n                }\r\n            } else if (res.status === 401) {\r\n                console.log(\"Token scaduto!\");\r\n            }\r\n            })\r\n            .catch(err => {\r\n                if (err.response.status === 401) {\r\n                    console.log(err)\r\n                    AuthService.logout()\r\n                }\r\n            })\r\n    }\r\n\r\n    const removeData = (id) => {\r\n        API.delete(`gestione-ordini/prodotto/${id}`, { headers: authHeader() }).then(res => {\r\n            const del = prodotto.filter(prodotto => id !== prodotto.id)\r\n            setProdotto(del)\r\n        })\r\n    }\r\n\r\n    const renderHeader = () => {\r\n        let headerElement = ['desc', 'grammatura', 'peso totale', 'operation']\r\n        return headerElement.map((key, index) => {\r\n            return <th key={index}>{key.toUpperCase()}</th>\r\n        })\r\n    }\r\n\r\n    const renderBody = () => {\r\n        return prodotto && prodotto.map(({ id, desc, grammatura, pesoTotale }) => {\r\n            return (\r\n                <tr key={id}>\r\n                    <td>{desc}</td>\r\n                    <td>{grammatura}</td>\r\n                    <td>{pesoTotale}</td>\r\n                    <td className='operation'>\r\n                        <button className='button' onClick={() => removeData(id)}>Delete</button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <table id='styled-table'>\r\n                <thead>\r\n                    <tr>{renderHeader()}</tr>\r\n                </thead>\r\n                <tbody>\r\n                    {renderBody()}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport { ProductTable };","import React, { useState, useEffect } from \"react\";\r\nimport API from './api';\r\nimport './mytable.css'\r\nimport './other2_table.css'\r\nimport AuthService from \"./services/auth.service\";\r\nimport authHeader from './services/auth-header';\r\n\r\nconst seller = AuthService.getCurrentUser();\r\n\r\n//const seller=\"angelo\";\r\nconst AdminUsersTable = (props) => {\r\n    const [users, setUsers] = useState([])\r\n    useEffect(() => {\r\n        getData()\r\n    },[props.trigU])\r\n\r\n    const getData = async () => {\r\n        if(seller.roles[0] === \"ROLE_ADMIN\"){\r\n            const response = await API.get(`/api/user/findUser`, { headers: authHeader() })\r\n            if (response.status === 200) {\r\n            setUsers(response.data)\r\n            } else if (response.status === 401) {\r\n                console.log(\"Token scaduto!\")\r\n            }\r\n        }\r\n    }\r\n\r\n    //DA FARE\r\n    const removeData = (username) => {\r\n        API.delete(`api/user/deleteUser/${username}`, { headers: authHeader() }).then(res => {\r\n            const del = users.filter(users => username !== users.username)\r\n            setUsers(del)\r\n        })\r\n    }\r\n\r\n    const renderHeader = () => {\r\n        let headerElement = ['username', 'email', 'operation']\r\n        return headerElement.map((key, index) => {\r\n            return <th key={index}>{key.toUpperCase()}</th>\r\n        })\r\n    }\r\n\r\n    const renderBody = () => {\r\n        return users && users.map(({ id, username, email}) => {\r\n            return (\r\n                <tr key={id}>\r\n                    <td>{username}</td>\r\n                    <td>{email}</td>\r\n                    <td className='operation'>\r\n                        <button className='button' onClick={() => removeData(username)}>Delete</button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <table id='users'>\r\n                <thead>\r\n                    <tr>{renderHeader()}</tr>\r\n                </thead>\r\n                <tbody>\r\n                    {renderBody()}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport { AdminUsersTable };","import \"date-fns\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport API from './api';\r\nimport './mytable.css'\r\nimport './other2_table.css'\r\nimport AuthService from \"./services/auth.service\";\r\nimport authHeader from './services/auth-header';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport { jsPDF } from \"jspdf\";\r\nimport * as html2canvas from 'html2canvas';\r\nimport 'jspdf-autotable';\r\n\r\nconst seller = AuthService.getCurrentUser();\r\n\r\nconst AdminReportTable = (props) => {\r\n    const [ordine, setOrdine] = useState([])\r\n    const [page, setPage] = useState(0);\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    },[props.trigR])\r\n\r\n    const getData = async () => {\r\n        var totalone = 0;\r\n        if(seller.roles[0] === \"ROLE_ADMIN\"){\r\n            const response = await API.get(`/gestione-ordine/todayOrder`, { headers: authHeader() })\r\n            for (var key in response.data) {\r\n                var obj=response.data[key];\r\n                for (var prop in obj) {\r\n                    if (prop === 'totale') {\r\n                        totalone = totalone + obj.totale;\r\n                    }\r\n                }\r\n              }\r\n              response.data.push({_id: \"TOTALE\", qty: 0, totale: totalone })\r\n              setOrdine(response.data)\r\n              setPage(Object.keys(response.data).length);\r\n        }  \r\n    }\r\n\r\n    const handleReportClick = () => {\r\n        let today = new Date().toISOString().slice(0, 10)\r\n        var myFormat = ['210', '297'];\r\n        if ( page > 19 ) {\r\n            myFormat = ['210', '594'];\r\n        } else {\r\n            myFormat = ['210', '297'];\r\n        }\r\n        console.log(myFormat)\r\n        window.scrollTo(0,0)\r\n        const input = document.getElementById('content',{scrollY: -window.scrollY});\r\n        html2canvas(input)\r\n            .then((canvas) => {\r\n                const imgData = canvas.toDataURL('image/png');\r\n                const pdf = new jsPDF({\r\n                    orientation: 'p',\r\n                    unit: 'mm',\r\n                    format: myFormat,\r\n                });\r\n                pdf.text(`Report ordini per il giorno ${today}`, 5, 10);\r\n                pdf.addImage(imgData, 'JPEG', 6, 25);\r\n                pdf.save(`report_${today}.pdf`);\r\n            }); \r\n        };\r\n\r\n    const renderHeader = () => {\r\n        let headerElement = ['desc', 'quantità', 'peso totale (gr)', 'data inserimento']\r\n        return headerElement.map((key, index) => {\r\n            return <th key={index}>{key.toUpperCase()}</th>\r\n        })\r\n    }\r\n\r\n    const renderBody = () => {\r\n        return ordine && ordine.map(({ _id, qty, totale, dataInserimento }) => {\r\n            return (\r\n                <tr key={_id}>\r\n                    <td>{_id}</td>\r\n                    <td>{qty}</td>\r\n                    <td>{totale}</td>\r\n                    <td>{dataInserimento}</td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n                    <Button onClick={() => handleReportClick()} size=\"large\" style={{ display: 'flex', backgroundColor: \"#3f51b5\", alignItems: 'center', justifyContent: 'center' }} startIcon={<CloudUploadIcon />} variant=\"outlined\">\r\n            Download Report\r\n        </Button>\r\n        <div id='content'>\r\n            <table id='report'>\r\n                <thead>\r\n                    <tr>{renderHeader()}</tr>\r\n                </thead>\r\n                <tbody>\r\n                    {renderBody()}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport { AdminReportTable };","import \"date-fns\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport API from './api';\r\nimport './mytable.css'\r\nimport './other2_table.css'\r\nimport AuthService from \"./services/auth.service\";\r\nimport authHeader from './services/auth-header';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { format } from 'date-fns';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport { jsPDF } from \"jspdf\";\r\nimport * as html2canvas from 'html2canvas';\r\nimport 'jspdf-autotable';\r\n\r\nconst seller = AuthService.getCurrentUser();\r\n\r\nconst AdminReportDay = (props) => {\r\n    const [ordine, setOrdine] = useState([])\r\n    const [selectedDate, setSelectedDate] = useState();\r\n    const [fileName, setFileName] = useState('');\r\n    const [page, setPage] = useState(0);\r\n\r\n    useEffect(() => {},[props.trigRD])\r\n\r\n    const handleDateChange = (date) => {\r\n        setSelectedDate(date);\r\n        const str = format(date,'yyyyMMdd')\r\n        getData(str);\r\n        setFileName(\"report_\" + str);\r\n      };\r\n\r\n    const getData = async (str) => {\r\n        var totalone=0;\r\n        if(seller.roles[0] === \"ROLE_ADMIN\"){\r\n            const response = await API.get(`/gestione-ordine/dateOrder/${str}`, { headers: authHeader() })\r\n            for (var key in response.data) {\r\n                var obj=response.data[key];\r\n                for (var prop in obj) {\r\n                    if (prop === 'totale') {\r\n                        totalone = totalone + obj.totale;\r\n                    }\r\n                }\r\n              }\r\n              response.data.push({_id: \"TOTALE\", qty: 0, totale: totalone })\r\n              setOrdine(response.data)\r\n              setPage(Object.keys(response.data).length);\r\n        } \r\n    }\r\n\r\n    const handleReportClick = () => {\r\n        var myFormat = ['210', '297'];\r\n        if ( page > 19 ) {\r\n            myFormat = ['210', '594'];\r\n        } else {\r\n            myFormat = ['210', '297'];\r\n        }\r\n        console.log(myFormat)\r\n        window.scrollTo(0,0)\r\n        const input = document.getElementById('content',{scrollY: -window.scrollY});\r\n        html2canvas(input)\r\n            .then((canvas) => {\r\n                const imgData = canvas.toDataURL('image/png');\r\n                const pdf = new jsPDF({\r\n                    orientation: 'p',\r\n                    unit: 'mm',\r\n                    format: myFormat,\r\n                });\r\n                pdf.text(`Report ordini per il giorno ${fileName}`, 5, 10);\r\n                pdf.addImage(imgData, 'JPEG', 6, 25);\r\n                pdf.save(`${fileName}.pdf`);\r\n            }); \r\n        };\r\n\r\n    const renderHeader = () => {\r\n        let headerElement = ['desc', 'quantità', 'peso totale (gr)', 'data inserimento']\r\n        return headerElement.map((key, index) => {\r\n            return <th key={index}>{key.toUpperCase()}</th>\r\n        })\r\n    }\r\n\r\n    const renderBody = () => {\r\n        return ordine && ordine.map(({ _id, qty, totale, dataInserimento }) => {\r\n            return (\r\n                <tr key={_id}>\r\n                    <td>{_id}</td>\r\n                    <td>{qty}</td>\r\n                    <td>{totale}</td>\r\n                    <td>{dataInserimento}</td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div id='root-content'>\r\n        <TextField InputLabelProps={{ shrink: true, }} InputProps={{ readOnly: true, }} variant=\"outlined\" value=\"Inserire la data per il report\"/>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n                format=\"yyyyMMdd\"\r\n                disableFuture={true}\r\n                id=\"date-picker-inline\"\r\n                inputVariant=\"filled\"\r\n                variant=\"dialog\"\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n                KeyboardButtonProps={{\r\n                'aria-label': 'change date'\r\n                }}\r\n            />\r\n        </MuiPickersUtilsProvider>\r\n        <Button onClick={() => handleReportClick()} size=\"large\" style={{ display: 'flex', backgroundColor: \"#3f51b5\", alignItems: 'center', justifyContent: 'center' }} startIcon={<CloudUploadIcon />} variant=\"outlined\">\r\n            Download Report\r\n        </Button>\r\n        <div id='content'>\r\n            <table id='report'>\r\n                <thead>\r\n                    <tr>{renderHeader()}</tr>\r\n                </thead>\r\n                <tbody>\r\n                    {renderBody()}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport { AdminReportDay };","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst email = value => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = value => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = value => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      successful: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.register(\r\n        this.state.username,\r\n        this.state.email,\r\n        this.state.password\r\n      ).then(\r\n        response => {\r\n          this.setState({\r\n            message: response.data.message,\r\n            successful: true\r\n          });\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            successful: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Username</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChangeUsername}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    validations={[required, vpassword]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    this.state.successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport API from './api';\r\nimport { AdminAppBar } from './AdminAppBar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { ProductTable } from './AdminProductTable';\r\nimport { AdminUsersTable } from './AdminUsersTable';\r\nimport { AdminReportTable } from './AdminReportTable';\r\nimport { AdminReportDay } from './AdminReportDay';\r\nimport authHeader from './services/auth-header';\r\nimport Register from \"./components/register.component\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n  }\r\n}));\r\n\r\nexport default function AdminComponent() {\r\n  const classes = useStyles();\r\n  const [desc, setDesc] = useState('');\r\n  const [grammatura, setGrammatura] = useState(0);\r\n  //const [nome, setNome] = useState(\"\");\r\n  const [boxUsersVisibility, setBoxUsersVisibility] = useState(\"none\");\r\n  const [pesoTotale, setPesoTotale] = useState(0);\r\n  //const [items, setItems] = useState();\r\n  const [result, setResult] = useState('');\r\n  const [open, setOpen] = useState(false);\r\n  //const [email, setEmail] = useState('');\r\n  //const [ordine, setOrdine] = useState(0);\r\n  //const [password, setPassword] = useState('');\r\n  //const [pesoTotaleCustom, setPesoTotaleCustom] = useState(0);\r\n  const [checkA, setCheckA] = useState(false);\r\n  const [boxProductVisibility, setBoxProductVisibility] = useState(\"none\");\r\n  const [checkB,setCheckB] = useState(false);\r\n  const [boxReportVisibility, setBoxReportVisibility] = useState(\"none\");\r\n  const [checkC,setCheckC] = useState(false);\r\n  const [boxReportDayVisibility, setBoxReportDayVisibility] = useState(\"none\");\r\n  const [checkD,setCheckD] = useState(false);\r\n  \r\n//const currentUser = AuthService.getCurrentUser();\r\n\r\n  const handleSwitchChange = (event) => {\r\n    setCheckA(event.target.checked);\r\n    if (event.target.checked) { setBoxProductVisibility(\"block\"); }\r\n    else { setBoxProductVisibility(\"none\"); }\r\n  };\r\n\r\n  const handleSwitchBChange = (event) => {\r\n    setCheckB(event.target.checked);\r\n    if (event.target.checked) { setBoxUsersVisibility(\"block\"); }\r\n    else { setBoxUsersVisibility(\"none\"); }\r\n  };\r\n\r\n  const handleSwitchCChange = (event) => {\r\n    setCheckC(event.target.checked);\r\n    if (event.target.checked) { setBoxReportVisibility(\"block\"); }\r\n    else { setBoxReportVisibility(\"none\"); }\r\n  };\r\n\r\n  const handleSwitchDChange = (event) => {\r\n    setCheckD(event.target.checked);\r\n    if (event.target.checked) { setBoxReportDayVisibility(\"block\"); }\r\n    else { setBoxReportDayVisibility(\"none\"); }\r\n  };\r\n\r\n   const handleProductClick = (desc,grammatura,pesoTotale) => {\r\n    if (desc !== '') {\r\n      let data = {\r\n        \"desc\": desc,\r\n        \"grammatura\": grammatura,\r\n        \"pesoTotale\": pesoTotale\r\n      };\r\n      API.post('gestione-ordini/prodotti/', data, { headers: authHeader() })\r\n        .then(response => {\r\n          if (response.status === 200) {\r\n            setResult(\"Prodotto inserito!\")\r\n            setOpen(true);\r\n          } else if (response.status === 401) {\r\n            setResult(\"Latua sessione è scaduta. Fai logout/login!\")\r\n            setOpen(true);\r\n          } \r\n        })\r\n        .catch(e => {\r\n          setResult(e.message)\r\n          setOpen(true);\r\n          //console.log(e);\r\n        });\r\n    } else {\r\n        setResult(\"Il prodotto non può essere vuoto...\")\r\n        setOpen(true);\r\n      }\r\n  }\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AdminAppBar />\r\n      <FormControlLabel\r\n        control={<Switch checked={checkA} onChange={handleSwitchChange} name=\"checkedA\" color=\"primary\" />}\r\n        label=\"Gestione prodotti\"\r\n      />\r\n      <Box display={boxProductVisibility} className={classes.root}>\r\n      <ProductTable trigP={checkA} />\r\n        \r\n          <TextField required label=\"Descrizione\" variant=\"outlined\" value={desc} margin=\"dense\" type=\"string\" defaultValue=\"\" onChange={e => setDesc(e.target.value)}></TextField>\r\n          <TextField required label=\"Grammatura (gr)\" variant=\"outlined\" value={grammatura} margin=\"dense\" type=\"number\" defaultValue=\"\" onChange={e => setGrammatura(e.target.value)}></TextField>\r\n          <TextField required label=\"Peso Totale (gr)\" variant=\"outlined\" value={pesoTotale} margin=\"dense\" type=\"number\" defaultValue=\"\" onChange={e => setPesoTotale(e.target.value)}></TextField>\r\n          <Button onClick={() => handleProductClick(desc,grammatura,pesoTotale)} size=\"large\" style={{ display: 'flex', backgroundColor: \"#3f51b5\", alignItems: 'center', justifyContent: 'center' }} startIcon={<CloudUploadIcon />} variant=\"outlined\">\r\n            Inserisci il prodotto\r\n          </Button>\r\n      </Box>\r\n      <br></br>\r\n      <FormControlLabel\r\n        control={<Switch checked={checkB} onChange={handleSwitchBChange} name=\"checkedB\" color=\"primary\" />}\r\n        label=\"Elimina o crea nuovi utenti\"\r\n      />\r\n      <Box display={boxUsersVisibility} className={classes.root}>\r\n      <AdminUsersTable trigU={checkB} />\r\n          <Register />\r\n        </Box>\r\n        <br></br>\r\n        <FormControlLabel\r\n        control={<Switch checked={checkC} onChange={handleSwitchCChange} name=\"checkedC\" color=\"primary\" />}\r\n        label=\"REPORT ORDINI OGGI\"\r\n      />\r\n        <Box display={boxReportVisibility} className={classes.root}>\r\n          <AdminReportTable trigR={checkC} />\r\n        </Box>\r\n        <br></br>\r\n        <FormControlLabel\r\n        control={<Switch checked={checkD} onChange={handleSwitchDChange} name=\"checkedD\" color=\"primary\" />}\r\n        label=\"REPORT ORDINI\"\r\n      />\r\n        <Box display={boxReportDayVisibility} className={classes.root}>\r\n          <AdminReportDay trigRD={checkD} />\r\n        </Box>\r\n\r\n      <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }} message={result} open={open} autoHideDuration={3500} onClose={handleClose} style={{ backgroundColor: 'green', color: 'black' }}></Snackbar>\r\n      <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }} message={result} open={open} autoHideDuration={3500} onClose={handleClose} style={{ backgroundColor: 'green', color: 'black' }}></Snackbar>\r\n    </div>\r\n  )\r\n}","import React, { Component } from \"react\";\r\nimport AdminComponent from '../AdminComponent'\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class BoardAdmin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getAdminBoard().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <AdminComponent />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport AuthService from \"./services/auth.service\";\r\nimport Login from \"./components/login.component\";\r\nimport Home from \"./components/home.component\";\r\nimport Profile from \"./components/profile.component\";\r\nimport BoardUser from \"./components/board-user.component\";\r\nimport BoardAdmin from \"./components/board-admin.component\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n    this.state = {\r\n      //showModeratorBoard: false,\r\n      showAdminBoard: false,\r\n      currentUser: undefined,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n        //showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\r\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\r\n      });\r\n    }\r\n  }\r\n\r\n  logOut() {\r\n    AuthService.logout();\r\n  }\r\n\r\n  render() {\r\n    const { currentUser, \r\n      //showModeratorBoard, \r\n      showAdminBoard } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n          <Link to={\"/\"} className=\"navbar-brand\">\r\n            Gestione Ordini\r\n          </Link>\r\n          <div className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/home\"} className=\"nav-link\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n\r\n            {/*showModeratorBoard && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/mod\"} className=\"nav-link\">\r\n                  Moderator Board\r\n                </Link>\r\n              </li>\r\n            )*/}\r\n\r\n            {showAdminBoard && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/admin\"} className=\"nav-link\">\r\n                  Admin Board\r\n                </Link>\r\n              </li>\r\n            )}\r\n\r\n            {currentUser && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/user\"} className=\"nav-link\">\r\n                  User\r\n                </Link>\r\n              </li>\r\n            )}\r\n          </div>\r\n\r\n          {currentUser ? (\r\n            <div className=\"navbar-nav ml-auto\">\r\n              {/*<li className=\"nav-item\">\r\n                <Link to={\"/profile\"} className=\"nav-link\">\r\n                  {currentUser.username}\r\n                </Link>\r\n          </li>*/}\r\n              <li className=\"nav-item\">\r\n                <a href=\"/\" className=\"nav-link\" onClick={this.logOut}>\r\n                  LogOut\r\n                </a>\r\n              </li>\r\n            </div>\r\n          ) : (\r\n            <div className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/login\"} className=\"nav-link\">\r\n                  Login\r\n                </Link>\r\n              </li>\r\n\r\n            {/*}  <li className=\"nav-item\">\r\n                <Link to={\"/register\"} className=\"nav-link\">\r\n                  Sign Up\r\n                </Link>\r\n          </li>*/}\r\n            </div>\r\n          )}\r\n        </nav>\r\n\r\n        {/*<div className=\"container mt-3\">*/}\r\n          <div>\r\n          <Switch>\r\n            <Route exact path={[\"/\", \"/home\"]} component={Home} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            {/*<Route exact path=\"/register\" component={Register} />*/}\r\n            <Route exact path=\"/profile\" component={Profile} />\r\n            <Route path=\"/user\" component={BoardUser} />\r\n            {/*<Route path=\"/mod\" component={BoardModerator} />*/}\r\n            <Route path=\"/admin\" component={BoardAdmin} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}