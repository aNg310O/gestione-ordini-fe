{"version":3,"sources":["services/auth.service.js","components/login.component.js","services/auth-header.js","services/user.service.js","components/home.component.js","components/profile.component.js","services/api.js","components/ordini.appbar.component.js","components/ordini.table.component.js","components/ordini.component.js","components/board-user.component.js","components/admin.appbar.component.js","components/admin.product.component.js","components/admin.users.component.js","components/admin.report.component.js","components/admin.customReport.component.js","components/register.component.js","components/admin.component.js","components/board-admin.component.js","asset/404-error-page-found.jpg","components/NotFoundPage.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","username","password","axios","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","email","parse","getItem","required","value","className","role","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","state","loading","message","e","this","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","toString","src","alt","onSubmit","ref","c","htmlFor","type","name","onChange","validations","disabled","style","display","Component","authHeader","user","get","headers","MyHome","content","UserService","getPublicContent","Profile","redirect","userReady","currentUser","getCurrentUser","to","substring","substr","id","roles","map","index","create","baseURL","responseType","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","AppBar","position","backgroundColor","Toolbar","Typography","variant","seller","Table","useState","ordini","setOrdini","useEffect","getData","trig","a","API","key","toUpperCase","desc","qty","pesoTotale","dataInserimento","note","onClick","delete","res","del","filter","ordine","removeData","formControl","margin","minWidth","selectEmpty","marginTop","width","SellerComponent","items","setItems","selected","setSelected","boxVisibility","setBoxVisiblity","boxCustomVisibility","setBoxCustomVisiblity","order","setOrder","result","setResult","open","setOpen","prodotto","setProdotto","setOrdine","setNote","pesoTotaleCustom","setPesoTotaleCustom","checkA","setCheckA","boxProductVisibility","setBoxProductVisibility","checkB","setCheckB","boxOrderVisibility","setBoxOrderVisibility","snackColor","setSnackColor","retrieveProduct","status","catch","FormControlLabel","control","Switch","checked","event","color","label","Box","FormControl","InputLabel","Select","labelId","myData","MenuItem","TextField","InputLabelProps","shrink","InputProps","readOnly","grammatura","defaultValue","inputProps","min","Button","selection","handleClick","size","alignItems","justifyContent","startIcon","customData","handleCustomClick","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","reason","SnackbarContent","BoardUser","getUserBoard","AdminAppBar","ProductTable","trigP","AdminUsersTable","users","setUsers","trigU","console","log","AdminReportTable","trigR","totalone","prop","obj","totale","_id","today","Date","toISOString","slice","scrollTo","test","jsPDF","text","autoTable","html","startY","save","handleReportClick","AdminReportDay","selectedDate","setSelectedDate","fileName","setFileName","trigRD","str","utils","DateFnsUtils","format","disableFuture","inputVariant","onKeyPress","handleKeypress","date","isEmail","vusername","vpassword","Register","handleRegister","onChangeEmail","successful","register","AdminComponent","setDesc","setGrammatura","boxUsersVisibility","setBoxUsersVisibility","setPesoTotale","boxReportVisibility","setBoxReportVisibility","checkC","setCheckC","boxReportDayVisibility","setBoxReportDayVisibility","checkD","setCheckD","handleProductClick","BoardAdmin","getAdminBoard","NotFoundPage","class","PageNotFound","textAlign","React","App","logOut","showAdminBoard","undefined","includes","logout","href","exact","path","component","Home","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7c3e91f2.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"https://heroku-be-gestione-ordini.herokuapp.com/api/auth/\";\r\n\r\nclass AuthService {\r\n  login(username, password) {\r\n    return axios\r\n      .post(API_URL + \"signin\", {\r\n        username,\r\n        password\r\n      })\r\n      .then(response => {\r\n        if (response.data.accessToken) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  register(username, email, password) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      username,\r\n      email,\r\n      password\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.login(this.state.username, this.state.password).then(\r\n        () => {\r\n          this.props.history.push(\"/\");\r\n          window.location.reload();\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            loading: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleLogin}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\">Username</label>\r\n              <Input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"username\"\r\n                value={this.state.username}\r\n                onChange={this.onChangeUsername}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.state.loading}\r\n              >\r\n                {this.state.loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Login</span>\r\n              </button>\r\n            </div>\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default function authHeader() {\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n  if (user && user.accessToken) {\r\n    // return { Authorization: 'Bearer ' + user.accessToken }; // for Spring Boot back-end\r\n    return { 'x-access-token': user.accessToken };       // for Node.js Express back-end\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n","import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nconst API_URL = 'https://heroku-be-gestione-ordini.herokuapp.com/api/test/';\r\n\r\nclass UserService {\r\n  getPublicContent() {\r\n    return axios.get(API_URL + 'all');\r\n  }\r\n\r\n  getUserBoard() {\r\n    return axios.get(API_URL + 'user', { headers: authHeader() });\r\n  }\r\n\r\n  getModeratorBoard() {\r\n    return axios.get(API_URL + 'mod', { headers: authHeader() });\r\n  }\r\n\r\n  getAdminBoard() {\r\n    return axios.get(API_URL + 'admin', { headers: authHeader() });\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class MyHome extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getPublicContent().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response && error.response.data) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      //redirect: \"/profile\",\r\n      redirect: null,\r\n      userReady: false,\r\n      currentUser: { username: \"\" }\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const currentUser = AuthService.getCurrentUser();\r\n\r\n    if (!currentUser) this.setState({ redirect: \"/\" });\r\n    this.setState({ currentUser: currentUser, userReady: true })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to={this.state.redirect} />\r\n    }\r\n\r\n    const { currentUser } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        {(this.state.userReady) ?\r\n        <div>\r\n        <header className=\"jumbotron\">\r\n          <h3>\r\n            <strong>{currentUser.username}</strong> Profile\r\n          </h3>\r\n        </header>\r\n        <p>\r\n          <strong>Token:</strong>{\" \"}\r\n          {currentUser.accessToken.substring(0, 20)} ...{\" \"}\r\n          {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\r\n        </p>\r\n        <p>\r\n          <strong>Id:</strong>{\" \"}\r\n          {currentUser.id}\r\n        </p>\r\n        <p>\r\n          <strong>Email:</strong>{\" \"}\r\n          {currentUser.email}\r\n        </p>\r\n        <strong>Authorities:</strong>\r\n        <ul>\r\n          {currentUser.roles &&\r\n            currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\r\n        </ul>\r\n      </div>: null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  //baseURL: `http://localhost:8082/api/gestione-ordini/`,\r\n  //baseURL: `http://localhost:8081/`,\r\n  baseURL: `https://heroku-be-gestione-ordini.herokuapp.com/`,\r\n  responseType: \"json\"\r\n});","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{ backgroundColor: '#2196F3' }}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Pagina ordini\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport API from '../services/api';\r\nimport '../asset/mytable.css'\r\nimport AuthService from \"../services/auth.service\";\r\nimport authHeader from '../services/auth-header';\r\n\r\nconst seller = AuthService.getCurrentUser();\r\n\r\nconst Table = (props) => {\r\n    const [ordini, setOrdini] = useState([])\r\n    useEffect(() => {\r\n        getData()\r\n    },[props.trig])\r\n\r\n    const getData = async () => {\r\n        if(seller.roles[0] === \"ROLE_ADMIN\"){\r\n            const response = await API.get(`/gestione-ordini/ordine/all`, { headers: authHeader() })\r\n            setOrdini(response.data)\r\n        } else {\r\n        const response = await API.get(`/gestione-ordini/ordini/${seller.username}`, { headers: authHeader() })\r\n        setOrdini(response.data)\r\n        }\r\n    }\r\n\r\n    const removeData = (id) => {\r\n        API.delete(`gestione-ordini/ordine/${id}`, { headers: authHeader() }).then(res => {\r\n            const del = ordini.filter(ordine => id !== ordine.id)\r\n            setOrdini(del)\r\n        })\r\n    }\r\n\r\n    const renderHeader = () => {\r\n        let headerElement = ['data inserimento', 'venditore', 'desc', 'qty', 'peso totale','note', 'operation']\r\n        return headerElement.map((key, index) => {\r\n            return <th key={index}>{key.toUpperCase()}</th>\r\n        })\r\n    }\r\n\r\n    const renderBody = () => {\r\n        return ordini && ordini.map(({ id, desc, qty, pesoTotale, dataInserimento, seller, note }) => {\r\n            return (\r\n                <tr key={id}>\r\n                    <td>{dataInserimento}</td>\r\n                    <td>{seller}</td>\r\n                    <td>{desc}</td>\r\n                    <td>{qty}</td>\r\n                    <td>{pesoTotale}</td>\r\n                    <td>{note}</td>\r\n                    <td className='operation'>\r\n                        <button className='button' onClick={() => removeData(id)}>Delete</button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <table id='ordini'>\r\n                <thead>\r\n                    <tr>{renderHeader()}</tr>\r\n                </thead>\r\n                <tbody>\r\n                    {renderBody()}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport { Table };","import React, { useState, useEffect } from \"react\";\r\nimport API from '../services/api';\r\nimport { ButtonAppBar } from './ordini.appbar.component';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { Table } from './ordini.table.component';\r\nimport AuthService from \"../services/auth.service\";\r\nimport authHeader from '../services/auth-header';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n  }\r\n}));\r\n\r\nexport function SellerComponent() {\r\n  const classes = useStyles();\r\n  const [items, setItems] = useState([]);\r\n  const [selected, setSelected] = useState(['']);\r\n  const [boxVisibility, setBoxVisiblity] = useState(\"none\");\r\n  const [boxCustomVisibility, setBoxCustomVisiblity] = useState(\"none\");\r\n  const [order, setOrder] = useState(0);\r\n  const [result, setResult] = useState('');\r\n  const [open, setOpen] = useState(false);\r\n  const [prodotto, setProdotto] = useState('');\r\n  const [ordine, setOrdine] = useState(0);\r\n  const [note, setNote] = useState('');\r\n  const [pesoTotaleCustom, setPesoTotaleCustom] = useState(0);\r\n  const [checkA, setCheckA] = useState(false);\r\n  const [boxProductVisibility, setBoxProductVisibility] = useState(\"none\");\r\n  const [checkB,setCheckB] = useState(false);\r\n  const [boxOrderVisibility, setBoxOrderVisibility] = useState(\"none\");\r\n  const [snackColor, setSnackColor] = useState('teal');\r\n  \r\nconst currentUser = AuthService.getCurrentUser();\r\n\r\n  const handleSwitchChange = (event) => {\r\n    setCheckA(event.target.checked);\r\n    if (event.target.checked) { setBoxProductVisibility(\"block\"); }\r\n    else { setBoxProductVisibility(\"none\"); }\r\n  };\r\n\r\n  const handleSwitchBChange = (event) => {\r\n    setCheckB(event.target.checked);\r\n    if (event.target.checked) { setBoxOrderVisibility(\"block\"); }\r\n    else { setBoxOrderVisibility(\"none\"); }\r\n  };\r\n\r\n  useEffect(() => {\r\n    retrieveProduct();\r\n  }, []);\r\n\r\n  const retrieveProduct = () => {\r\n    API.get('gestione-ordini/prodotti',  { headers: authHeader() })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          setItems(response.data);\r\n        }\r\n      })\r\n      .catch(e => {\r\n        if (e.response.status === 401) {\r\n          setSnackColor('red');\r\n          setResult(\"La tua sessione è scaduta. Fai logout/login!\")\r\n          setOpen(true);\r\n        } else if (e.response.status === 403) {\r\n          setSnackColor('red');\r\n          setResult(\"No token provided. Fai logout/login!\")\r\n          setOpen(true);\r\n        } else {\r\n          setSnackColor('red');\r\n          setResult(e.message)\r\n          setOpen(true);\r\n        }\r\n      });\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    if (event.target.value !== 2) {\r\n      setSelected(event.target.value || '');\r\n      setBoxVisiblity(\"block\");\r\n      setBoxCustomVisiblity(\"none\");\r\n      setOrdine(0);\r\n      setNote('');\r\n      setProdotto('');\r\n      setPesoTotaleCustom(0);\r\n      setOrder(0);\r\n    } else {\r\n      setSelected(event.target.value || '');\r\n      setBoxVisiblity(\"none\");\r\n      setBoxCustomVisiblity(\"block\");\r\n      setOrdine(0);\r\n      setNote('');\r\n      setProdotto('');\r\n      setPesoTotaleCustom(0);\r\n      setOrder(0);\r\n    }\r\n  };\r\n\r\n  const handleClick = (selection,note) => {\r\n    if (order !== 0) {\r\n      let data = {\r\n        \"desc\": selection.desc,\r\n        \"seller\": currentUser.username,\r\n        \"pesoProdotto\": selection.pesoTotale,\r\n        \"qty\": order,\r\n        \"note\": note,\r\n        \"isCustom\": false\r\n      };\r\n      API.post('gestione-ordini/ordine/', data,  { headers: authHeader() })\r\n        .then(response => {\r\n          if (response.status === 200) {\r\n            setSnackColor('green');\r\n            setResult(\"Ordine inserito!\")\r\n            setOpen(true);\r\n          }\r\n        })\r\n        .catch(e => {\r\n          if (e.response.status === 401) {\r\n            setSnackColor('red');\r\n            setResult(\"La tua sessione è scaduta. Fai logout/login!\")\r\n            setOpen(true);\r\n          } else if (e.response.status === 403) {\r\n            setSnackColor('red');\r\n            setResult(\"No token provided. Fai logout/login!\")\r\n            setOpen(true);\r\n          } else {\r\n            setSnackColor('red');\r\n            setResult(e.message)\r\n            setOpen(true);\r\n          }\r\n        });\r\n    } else {\r\n        setResult(\"L'ordine non può essere vuoto...\")\r\n        setOpen(true);\r\n      }\r\n  }\r\n\r\n  const handleCustomClick = (prodotto, pesoTotaleCustom, ordine, note) => {\r\n    if (ordine !== 0) {\r\n      let customData = {\r\n        \"desc\": prodotto,\r\n        \"seller\": currentUser.username,\r\n        \"pesoProdotto\": pesoTotaleCustom,\r\n        \"qty\": ordine,\r\n        \"note\": note,\r\n        \"isCustom\": true\r\n      };\r\n      API.post('gestione-ordini/ordine/', customData,  { headers: authHeader() })\r\n        .then(response => {\r\n          if (response.status === 200) {\r\n            setSnackColor('green');\r\n            setResult(\"Ordine custom inserito!\")\r\n            setOpen(true);\r\n          }\r\n        })\r\n        .catch(e => {\r\n          if (e.response.status === 401) {\r\n            setSnackColor('red');\r\n            setResult(\"La tua sessione è scaduta. Fai logout/login!\")\r\n            setOpen(true);\r\n          } else if (e.response.status === 403) {\r\n            setSnackColor('red');\r\n            setResult(\"No token provided. Fai logout/login!\")\r\n            setOpen(true);\r\n          } else {\r\n            setSnackColor('red');\r\n            setResult(e.message)\r\n            setOpen(true);\r\n          }\r\n        });\r\n    } else {\r\n        setResult(\"L'ordine non può essere vuoto...\")\r\n        setOpen(true);\r\n      }\r\n  }\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ButtonAppBar />\r\n      <FormControlLabel\r\n        control={<Switch checked={checkA} onChange={handleSwitchChange} name=\"checkedA\" color=\"primary\" />}\r\n        label=\"Inserisci ordini\"\r\n      />\r\n      <Box display={boxProductVisibility} className={classes.root}>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id=\"demo-simple-select-label\">Prodotti</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={selected.desc}\r\n            onChange={handleChange}>\r\n            {items && items.map((myData) => (\r\n            <MenuItem value={myData} key={myData.desc}>{myData.desc}</MenuItem>))}\r\n            <MenuItem value={2} key={\"custom\"}>Custom</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <Box display={boxVisibility} className={classes.root}>\r\n          <TextField label=\"Prodotto\" style={{ backgroundColor: \"#D4D4D4\"}} InputLabelProps={{ shrink: true }} InputProps={{ readOnly: true }} variant=\"outlined\" value={selected.desc}></TextField>\r\n          <TextField label=\"Grammatura (gr)\" style={{ backgroundColor: \"#D4D4D4\"}} InputLabelProps={{ shrink: true, }} InputProps={{ readOnly: true, }} variant=\"outlined\" value={selected.grammatura}></TextField>\r\n          <TextField label=\"Peso Totale (gr)\" style={{ backgroundColor: \"#D4D4D4\"}} InputLabelProps={{ shrink: true, }} InputProps={{ readOnly: true, }} variant=\"outlined\" value={selected.pesoTotale * order}></TextField>\r\n          <TextField label=\"Inserisci qui l'ordine\" margin=\"none\" onChange={e => setOrder(e.target.value)} value={order} type=\"number\" defaultValue=\"0\" variant=\"outlined\" InputProps={{ inputProps: {min: 0} }}></TextField>\r\n          <TextField label=\"Note\" value={note} onChange={e => setNote(e.target.value)} margin=\"none\" type=\"string\" defaultValue=\"\" variant=\"outlined\" ></TextField>\r\n          \r\n          <Button onClick={() => handleClick(selected,note)} size=\"large\" style={{ display: 'flex', backgroundColor: \"#3f51b5\", alignItems: 'center', justifyContent: 'center', \"margin-top\": \"10px\" }} startIcon={<CloudUploadIcon />} variant=\"outlined\">\r\n            Inserisci l'ordine\r\n          </Button>\r\n        </Box>\r\n        <Box display={boxCustomVisibility} className={classes.root}>\r\n          <TextField required value={prodotto} margin=\"none\" onChange={e => setProdotto(e.target.value)} type=\"string\" defaultValue=\"\" variant=\"outlined\" label=\"Nome prodotto\"></TextField>\r\n          <TextField required value={pesoTotaleCustom} margin=\"none\" onChange={e => setPesoTotaleCustom(e.target.value)} type=\"number\" defaultValue=\"0\" variant=\"outlined\" label=\"Peso totale(gr)\" InputProps={{ inputProps: {min: 0} }}></TextField>\r\n          <TextField required value={ordine} margin=\"none\" onChange={e => setOrdine(e.target.value)} type=\"number\" defaultValue=\"0\" variant=\"outlined\" label=\"Quantità(pezzi)\" InputProps={{ inputProps: {min: 0} }}></TextField>\r\n          <TextField value={note} margin=\"none\" onChange={e => setNote(e.target.value)} type=\"string\" defaultValue=\"\" variant=\"outlined\" label=\"Note\"></TextField>\r\n          <Button onClick={() => handleCustomClick(prodotto, pesoTotaleCustom, ordine, note)} size=\"large\" style={{ display: 'flex', backgroundColor: \"#3f51b5\", alignItems: 'center', justifyContent: 'center' }} startIcon={<CloudUploadIcon />} variant=\"outlined\">\r\n            Inserisci l'ordine personalizzato\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n        open={open}\r\n        autoHideDuration={3000}\r\n        onClose={handleClose}\r\n      >\r\n        <SnackbarContent style={{\r\n          backgroundColor: snackColor,\r\n        }}\r\n          message={result}\r\n        />\r\n      </Snackbar>\r\n      <br></br>\r\n      <FormControlLabel\r\n        control={<Switch checked={checkB} onChange={handleSwitchBChange} name=\"checkedB\" color=\"primary\" />}\r\n        label=\"Rivedi/modifica l'ordine inserito\"\r\n      />\r\n      <Box display={boxOrderVisibility} className={classes.root}>\r\n              <Table trig={checkB} />\r\n      </Box>\r\n    </div>\r\n  )\r\n}","import React, { Component } from \"react\";\r\nimport UserService from \"../services/user.service\";\r\nimport { SellerComponent } from './ordini.component'\r\n\r\nexport default class BoardUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getUserBoard().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n          <SellerComponent />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport function AdminAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{ backgroundColor: '#2196F3'}}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Pagina Admin\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport API from '../services/api';\r\nimport '../asset/mytable.css'\r\nimport AuthService from \"../services/auth.service\";\r\nimport authHeader from '../services/auth-header';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\n\r\nconst seller = AuthService.getCurrentUser();\r\n\r\nconst ProductTable = (props) => {\r\n    const [prodotto, setProdotto] = useState([])\r\n    const [result, setResult] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n    const [snackColor, setSnackColor] = useState('teal');\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    },[props.trigP])\r\n\r\n    const getData = () => {\r\n        API.get(`/gestione-ordini/prodotti/`, { headers: authHeader() })\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    if(seller.roles[0] === \"ROLE_ADMIN\") {\r\n                    setProdotto(res.data)\r\n                    }\r\n                }})\r\n                .catch(e => {\r\n                    if (e.response.status === 401) {\r\n                      setSnackColor('red');\r\n                      setResult(\"La tua sessione è scaduta. Fai logout/login!\")\r\n                      setOpen(true);\r\n                    } else if (e.response.status === 403) {\r\n                      setSnackColor('red');\r\n                      setResult(\"No token provided. Fai logout/login!\")\r\n                      setOpen(true);\r\n                    } else {\r\n                      setSnackColor('red');\r\n                      setResult(e.message)\r\n                      setOpen(true);\r\n                    }\r\n                  });\r\n              }\r\n\r\n    const removeData = (id) => {\r\n        API.delete(`gestione-ordini/prodotto/${id}`, { headers: authHeader() }).then(res => {\r\n            const del = prodotto.filter(prodotto => id !== prodotto.id)\r\n            setProdotto(del)\r\n        })\r\n    }\r\n\r\n    const renderHeader = () => {\r\n        let headerElement = ['desc', 'grammatura', 'peso totale', 'operation']\r\n        return headerElement.map((key, index) => {\r\n            return <th key={index}>{key.toUpperCase()}</th>\r\n        })\r\n    }\r\n\r\n    const renderBody = () => {\r\n        return prodotto && prodotto.map(({ id, desc, grammatura, pesoTotale }) => {\r\n            return (\r\n                <tr key={id}>\r\n                    <td>{desc}</td>\r\n                    <td>{grammatura}</td>\r\n                    <td>{pesoTotale}</td>\r\n                    <td className='operation'>\r\n                        <button className='button' onClick={() => removeData(id)}>Delete</button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n        setOpen(false);\r\n      };\r\n\r\n    return (\r\n        <div>\r\n            <table id='styled-table'>\r\n                <thead>\r\n                    <tr>{renderHeader()}</tr>\r\n                </thead>\r\n                <tbody>\r\n                    {renderBody()}\r\n                </tbody>\r\n            </table>\r\n\r\n            <Snackbar\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n        open={open}\r\n        autoHideDuration={3000}\r\n        onClose={handleClose}\r\n      >\r\n        <SnackbarContent style={{\r\n          backgroundColor: snackColor,\r\n        }}\r\n          message={result}\r\n        />\r\n      </Snackbar>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport { ProductTable };","import React, { useState, useEffect } from \"react\";\r\nimport API from '../services/api';\r\nimport '../asset/mytable.css'\r\nimport AuthService from \"../services/auth.service\";\r\nimport authHeader from '../services/auth-header';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\n\r\n\r\nconst seller = AuthService.getCurrentUser();\r\n\r\nconst AdminUsersTable = (props) => {\r\n    const [users, setUsers] = useState([])\r\n    const [snackColor, setSnackColor] = useState('teal');\r\n    const [result, setResult] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        getData()\r\n    },[props.trigU])\r\n\r\n    const getData = async () => {\r\n        if(seller.roles[0] === \"ROLE_ADMIN\"){\r\n            const response = await API.get(`/api/user/findUser`, { headers: authHeader() })\r\n            if (response.status === 200) {\r\n            setUsers(response.data)\r\n            } else if (response.status === 401) {\r\n                console.log(\"Token scaduto!\")\r\n            }\r\n        }\r\n    }\r\n\r\n    //DA FARE\r\n    const removeData = (username) => {\r\n        if (username === seller.username) {\r\n            setResult(\"Non puoi rimuovere te stesso...\")\r\n            setSnackColor('orange');\r\n            setOpen(true);\r\n        } else {\r\n        API.delete(`api/user/deleteUser/${username}`, { headers: authHeader() }).then(res => {\r\n            const del = users.filter(users => username !== users.username)\r\n            setUsers(del)\r\n        })}\r\n    }\r\n\r\n    const renderHeader = () => {\r\n        let headerElement = ['username', 'email', 'operation']\r\n        return headerElement.map((key, index) => {\r\n            return <th key={index}>{key.toUpperCase()}</th>\r\n        })\r\n    }\r\n\r\n    const renderBody = () => {\r\n        return users && users.map(({ id, username, email}) => {\r\n            return (\r\n                <tr key={id}>\r\n                    <td>{username}</td>\r\n                    <td>{email}</td>\r\n                    <td className='operation'>\r\n                        <button className='button' onClick={() => removeData(username)}>Delete</button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n        setOpen(false);\r\n      };\r\n\r\n    return (\r\n        <div>\r\n            <table id='users'>\r\n                <thead>\r\n                    <tr>{renderHeader()}</tr>\r\n                </thead>\r\n                <tbody>\r\n                    {renderBody()}\r\n                </tbody>\r\n            </table>\r\n            <Snackbar\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n        open={open}\r\n        autoHideDuration={3000}\r\n        onClose={handleClose}\r\n      >\r\n        <SnackbarContent style={{\r\n          backgroundColor: snackColor,\r\n        }}\r\n          message={result}\r\n        />\r\n      </Snackbar>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport { AdminUsersTable };","import \"date-fns\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport API from '../services/api';\r\nimport '../asset/mytable.css'\r\nimport AuthService from \"../services/auth.service\";\r\nimport authHeader from '../services/auth-header';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport { jsPDF } from \"jspdf\";\r\nimport 'jspdf-autotable';\r\n\r\nconst seller = AuthService.getCurrentUser();\r\n\r\nconst AdminReportTable = (props) => {\r\n    const [ordine, setOrdine] = useState([])\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    },[props.trigR])\r\n\r\n    const getData = async () => {\r\n        var totalone = 0;\r\n        if(seller.roles[0] === \"ROLE_ADMIN\"){\r\n            const response = await API.get(`/gestione-ordine/todayOrder`, { headers: authHeader() })\r\n            for (var key in response.data) {\r\n                var obj=response.data[key];\r\n                for (var prop in obj) {\r\n                    if (prop === 'totale') {\r\n                        totalone = totalone + obj.totale;\r\n                    }\r\n                }\r\n              }\r\n              response.data.push({_id: \"TOTALE\", qty: 0, totale: totalone })\r\n              setOrdine(response.data)\r\n        }  \r\n    }\r\n\r\n    const handleReportClick = () => {\r\n        let today = new Date().toISOString().slice(0, 10)\r\n        window.scrollTo(0,0)\r\n        var test = new jsPDF();\r\n        test.text(`Report ordini per il giorno ${today}`, 5, 15);\r\n        test.autoTable({html: '#report', startY: 25});\r\n        test.save(`report_${today}.pdf`);\r\n        };\r\n\r\n    const renderHeader = () => {\r\n        let headerElement = ['desc', 'quantità', 'peso totale (gr)', 'data inserimento']\r\n        return headerElement.map((key, index) => {\r\n            return <th key={index}>{key.toUpperCase()}</th>\r\n        })\r\n    }\r\n\r\n    const renderBody = () => {\r\n        return ordine && ordine.map(({ _id, qty, totale, dataInserimento }) => {\r\n            return (\r\n                <tr key={_id}>\r\n                    <td>{_id}</td>\r\n                    <td>{qty}</td>\r\n                    <td>{totale}</td>\r\n                    <td>{dataInserimento}</td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n                    <Button onClick={() => handleReportClick()} size=\"large\" style={{ display: 'flex', backgroundColor: \"#3f51b5\", alignItems: 'center', justifyContent: 'center' }} startIcon={<CloudUploadIcon />} variant=\"outlined\">\r\n            Download Report\r\n        </Button>\r\n        <br></br>\r\n        <div id='content'>\r\n            <table id='report'>\r\n                <thead>\r\n                    <tr>{renderHeader()}</tr>\r\n                </thead>\r\n                <tbody>\r\n                    {renderBody()}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <br></br>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport { AdminReportTable };","import \"date-fns\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport API from '../services/api';\r\nimport '../asset/mytable.css'\r\nimport AuthService from \"../services/auth.service\";\r\nimport authHeader from '../services/auth-header';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { format } from 'date-fns';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport { jsPDF } from \"jspdf\";\r\nimport 'jspdf-autotable';\r\n\r\nconst seller = AuthService.getCurrentUser();\r\n\r\nconst AdminReportDay = (props) => {\r\n    const [ordine, setOrdine] = useState([])\r\n    const [selectedDate, setSelectedDate] = useState();\r\n    const [fileName, setFileName] = useState('');\r\n\r\n    useEffect(() => {},[props.trigRD])\r\n\r\n    const handleDateChange = (date) => {\r\n        console.log(date)\r\n        setSelectedDate(date);\r\n        const str = format(date,'yyyyMMdd')\r\n        getData(str);\r\n        setFileName(\"report_\" + str);\r\n      };\r\n\r\n    const getData = async (str) => {\r\n        var totalone=0;\r\n        if(seller.roles[0] === \"ROLE_ADMIN\"){\r\n            const response = await API.get(`/gestione-ordine/dateOrder/${str}`, { headers: authHeader() })\r\n            for (var key in response.data) {\r\n                var obj=response.data[key];\r\n                for (var prop in obj) {\r\n                    if (prop === 'totale') {\r\n                        totalone = totalone + obj.totale;\r\n                    }\r\n                }\r\n              }\r\n              response.data.push({_id: \"TOTALE\", qty: 0, totale: totalone })\r\n              setOrdine(response.data)\r\n        } \r\n    }\r\n\r\n    const handleReportClick = () => {\r\n        window.scrollTo(0,0)\r\n        var test = new jsPDF();\r\n        test.text(`Report ordini per il giorno ${fileName.substring(7,16)}`, 5, 15);\r\n        test.autoTable({html: '#reportday', startY: 25});\r\n        test.save(`${fileName}.pdf`);\r\n        };\r\n\r\n    const renderHeader = () => {\r\n        let headerElement = ['desc', 'quantità', 'peso totale (gr)', 'data inserimento']\r\n        return headerElement.map((key, index) => {\r\n            return <th key={index}>{key.toUpperCase()}</th>\r\n        })\r\n    }\r\n\r\n    const renderBody = () => {\r\n        return ordine && ordine.map(({ _id, qty, totale, dataInserimento }) => {\r\n            return (\r\n                <tr key={_id}>\r\n                    <td>{_id}</td>\r\n                    <td>{qty}</td>\r\n                    <td>{totale}</td>\r\n                    <td>{dataInserimento}</td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    const handleKeypress = (e) => {\r\n        e.preventDefault();\r\n        return false\r\n        }\r\n\r\n    return (\r\n        <div id='root-content'>\r\n        <TextField style={{ backgroundColor: \"#D4D4D4\"}} InputLabelProps={{ shrink: true, }} InputProps={{ readOnly: true, }} variant=\"outlined\" value=\"Inserire la data per il report\"/>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n                InputProps={{ readOnly: true, }}\r\n                format=\"yyyyMMdd\"\r\n                disableFuture={true}\r\n                id=\"date-picker-inline\"\r\n                inputVariant=\"filled\"\r\n                onKeyPress={(e) => { handleKeypress(e)}}\r\n                variant=\"dialog\"\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n            />\r\n    </MuiPickersUtilsProvider>\r\n\r\n        <Button onClick={() => handleReportClick()} size=\"large\" style={{ \"margin-top\":\"10px\", display: 'flex', backgroundColor: \"#3f51b5\", alignItems: 'center', justifyContent: 'center' }} startIcon={<CloudUploadIcon />} variant=\"outlined\">\r\n            Download Report\r\n        </Button>\r\n        <br></br>\r\n        <div id='contentday'>\r\n            <table id='reportday'>\r\n                <thead>\r\n                    <tr>{renderHeader()}</tr>\r\n                </thead>\r\n                <tbody>\r\n                    {renderBody()}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <br></br>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport { AdminReportDay };","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst email = value => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = value => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = value => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      successful: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.register(\r\n        this.state.username,\r\n        this.state.email,\r\n        this.state.password\r\n      ).then(\r\n        response => {\r\n          this.setState({\r\n            message: response.data.message,\r\n            successful: true\r\n          });\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            successful: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Username</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChangeUsername}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    validations={[required, vpassword]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    this.state.successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport API from '../services/api';\r\nimport { AdminAppBar } from './admin.appbar.component';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { ProductTable } from './admin.product.component';\r\nimport { AdminUsersTable } from './admin.users.component';\r\nimport { AdminReportTable } from './admin.report.component';\r\nimport { AdminReportDay } from './admin.customReport.component';\r\nimport authHeader from '../services/auth-header';\r\nimport Register from \"./register.component\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n  }\r\n}));\r\n\r\nexport default function AdminComponent() {\r\n  const classes = useStyles();\r\n  const [desc, setDesc] = useState('');\r\n  const [grammatura, setGrammatura] = useState(0);\r\n  const [boxUsersVisibility, setBoxUsersVisibility] = useState(\"none\");\r\n  const [pesoTotale, setPesoTotale] = useState(0);\r\n  const [result, setResult] = useState('');\r\n  const [open, setOpen] = useState(false);\r\n  const [checkA, setCheckA] = useState(false);\r\n  const [boxProductVisibility, setBoxProductVisibility] = useState(\"none\");\r\n  const [checkB, setCheckB] = useState(false);\r\n  const [boxReportVisibility, setBoxReportVisibility] = useState(\"none\");\r\n  const [checkC, setCheckC] = useState(false);\r\n  const [boxReportDayVisibility, setBoxReportDayVisibility] = useState(\"none\");\r\n  const [checkD, setCheckD] = useState(false);\r\n  const [snackColor, setSnackColor] = useState('teal');\r\n\r\n  const seller = AuthService.getCurrentUser();\r\n\r\n  const handleSwitchChange = (event) => {\r\n    setCheckA(event.target.checked);\r\n    if (event.target.checked) { setBoxProductVisibility(\"block\"); }\r\n    else { setBoxProductVisibility(\"none\"); }\r\n  };\r\n\r\n  const handleSwitchBChange = (event) => {\r\n    setCheckB(event.target.checked);\r\n    if (event.target.checked) { setBoxUsersVisibility(\"block\"); }\r\n    else { setBoxUsersVisibility(\"none\"); }\r\n  };\r\n\r\n  const handleSwitchCChange = (event) => {\r\n    setCheckC(event.target.checked);\r\n    if (event.target.checked) { setBoxReportVisibility(\"block\"); }\r\n    else { setBoxReportVisibility(\"none\"); }\r\n  };\r\n\r\n  const handleSwitchDChange = (event) => {\r\n    setCheckD(event.target.checked);\r\n    if (event.target.checked) { setBoxReportDayVisibility(\"block\"); }\r\n    else { setBoxReportDayVisibility(\"none\"); }\r\n  };\r\n\r\n  const handleProductClick = (desc, grammatura, pesoTotale) => {\r\n    if (desc !== '') {\r\n      let data = {\r\n        \"desc\": desc,\r\n        \"grammatura\": grammatura,\r\n        \"pesoTotale\": pesoTotale\r\n      };\r\n      API.post('gestione-ordini/prodotti/', data, { headers: authHeader() })\r\n        .then(response => {\r\n          if (response.status === 200) {\r\n            setSnackColor('green');\r\n            setResult(\"Prodotto inserito!\")\r\n            setOpen(true);\r\n          }\r\n        })\r\n        .catch(e => {\r\n          if (e.response.status === 401) {\r\n            setSnackColor('red');\r\n            setResult(\"La tua sessione è scaduta. Fai logout/login!\")\r\n            setOpen(true);\r\n          } else if (e.response.status === 403) {\r\n            setSnackColor('red');\r\n            setResult(\"No token provided. Fai logout/login!\")\r\n            setOpen(true);\r\n          } else {\r\n            setSnackColor('red');\r\n            setResult(e.message)\r\n            setOpen(true);\r\n          }\r\n        });\r\n    } else {\r\n      setResult(\"Il prodotto non può essere vuoto...\")\r\n      setSnackColor('orange');\r\n      setOpen(true);\r\n    }\r\n  }\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AdminAppBar />\r\n      <FormControlLabel\r\n        control={<Switch checked={checkA} onChange={handleSwitchChange} name=\"checkedA\" color=\"primary\" />}\r\n        label=\"Gestione prodotti\"\r\n      />\r\n      <Box display={boxProductVisibility} className={classes.root}>\r\n        <ProductTable trigP={checkA} />\r\n<br></br>\r\n        <TextField required label=\"Descrizione\" variant=\"outlined\" value={desc} margin=\"dense\" type=\"string\" defaultValue=\"\" onChange={e => setDesc(e.target.value)}></TextField>\r\n        <TextField required label=\"Grammatura (gr)\" variant=\"outlined\" value={grammatura} margin=\"dense\" type=\"number\" defaultValue=\"\" onChange={e => setGrammatura(e.target.value)}></TextField>\r\n        <TextField required label=\"Peso Totale (gr)\" variant=\"outlined\" value={pesoTotale} margin=\"dense\" type=\"number\" defaultValue=\"\" onChange={e => setPesoTotale(e.target.value)}></TextField>\r\n        <br></br>\r\n        <Button onClick={() => handleProductClick(desc, grammatura, pesoTotale)} size=\"large\" style={{ display: 'flex', backgroundColor: \"#3f51b5\", alignItems: 'center', justifyContent: 'center' }} startIcon={<CloudUploadIcon />} variant=\"outlined\">\r\n          Inserisci il prodotto\r\n          </Button>\r\n      </Box>\r\n      <br></br>\r\n      <FormControlLabel\r\n        control={<Switch checked={checkB} onChange={handleSwitchBChange} name=\"checkedB\" color=\"primary\" />}\r\n        label=\"Elimina o crea nuovi utenti\"\r\n      />\r\n      <Box display={boxUsersVisibility} className={classes.root}>\r\n        <AdminUsersTable trigU={checkB} />\r\n        <Register />\r\n      </Box>\r\n      <br></br>\r\n      <FormControlLabel\r\n        control={<Switch checked={checkC} onChange={handleSwitchCChange} name=\"checkedC\" color=\"primary\" />}\r\n        label=\"Report ordini\"\r\n      />\r\n      <Box display={boxReportVisibility} className={classes.root}>\r\n        <AdminReportTable trigR={checkC} />\r\n      </Box>\r\n      <br></br>\r\n      <FormControlLabel\r\n        control={<Switch checked={checkD} onChange={handleSwitchDChange} name=\"checkedD\" color=\"primary\" />}\r\n        label=\"Report ordini per data\"\r\n      />\r\n      <Box display={boxReportDayVisibility} className={classes.root}>\r\n        <AdminReportDay trigRD={checkD} />\r\n      </Box>\r\n\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n        open={open}\r\n        autoHideDuration={3000}\r\n        onClose={handleClose}\r\n      >\r\n        <SnackbarContent style={{\r\n          backgroundColor: snackColor,\r\n        }}\r\n          message={result}\r\n        />\r\n      </Snackbar>\r\n    </div>\r\n  )\r\n}","import React, { Component } from \"react\";\r\nimport AdminComponent from './admin.component'\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class BoardAdmin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getAdminBoard().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <AdminComponent />\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/404-error-page-found.dcb2ff4c.jpg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PageNotFound from '../asset/404-error-page-found.jpg';\r\nclass NotFoundPage extends React.Component{\r\n    render(){\r\n        return <div class=\"container\">\r\n            <img src={PageNotFound} alt=\"\" />\r\n            <h1 style={{textAlign:\"center\"}}>\r\n              <Link to=\"/\">Go to Home </Link>\r\n            </h1>\r\n          </div>;\r\n    }\r\n}\r\nexport default NotFoundPage;","import React, { Component } from \"react\";\r\nimport { Switch, Route, Link, Redirect } from \"react-router-dom\";\r\n//import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./asset/App.css\";\r\nimport AuthService from \"./services/auth.service\";\r\nimport Login from \"./components/login.component\";\r\nimport Home from \"./components/home.component\";\r\nimport Profile from \"./components/profile.component\";\r\nimport BoardUser from \"./components/board-user.component\";\r\nimport BoardAdmin from \"./components/board-admin.component\";\r\nimport NotFoundPage from './components/NotFoundPage'\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n    this.state = {\r\n      //showModeratorBoard: false,\r\n      showAdminBoard: false,\r\n      currentUser: undefined,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n        //showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\r\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\r\n      });\r\n    }\r\n  }\r\n\r\n  logOut() {\r\n    AuthService.logout();\r\n  }\r\n\r\n  render() {\r\n    const { currentUser, \r\n      //showModeratorBoard, \r\n      showAdminBoard } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-expand navbar-dark bg-secondary\">\r\n          <Link to={\"/\"} className=\"navbar-brand\">\r\n            Gestione Ordini\r\n          </Link>\r\n          <div className=\"navbar-nav mr-auto\">\r\n            {/*<li className=\"nav-item\">\r\n              <Link to={\"/home\"} className=\"nav-link\">\r\n                Home\r\n              </Link>\r\n            </li>*/}\r\n\r\n            {/*showModeratorBoard && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/mod\"} className=\"nav-link\">\r\n                  Moderator Board\r\n                </Link>\r\n              </li>\r\n            )*/}\r\n\r\n            {showAdminBoard && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/admin\"} className=\"nav-link\">\r\n                  Admin\r\n                </Link>\r\n              </li>\r\n            )}\r\n\r\n            {currentUser && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/user\"} className=\"nav-link\">\r\n                  Ordini\r\n                </Link>\r\n              </li>\r\n            )}\r\n          </div>\r\n\r\n          {currentUser ? (\r\n            <div className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/profile\"} className=\"nav-link\">\r\n                  {currentUser.username}\r\n          </Link>\r\n          </li>\r\n              <li className=\"nav-item\">\r\n                <a href=\"/\" className=\"nav-link\" onClick={this.logOut}>\r\n                  LogOut\r\n                </a>\r\n              </li>\r\n            </div>\r\n          ) : (\r\n            <div className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/login\"} className=\"nav-link\">\r\n                  Login\r\n                </Link>\r\n              </li>\r\n\r\n            {/*}  <li className=\"nav-item\">\r\n                <Link to={\"/register\"} className=\"nav-link\">\r\n                  Sign Up\r\n                </Link>\r\n          </li>*/}\r\n            </div>\r\n          )}\r\n        </nav>\r\n\r\n        <div className=\"container mt-3\">\r\n          <Switch>\r\n            <Route exact path={[\"/\", \"/home\"]} component={Home} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            {/*<Route exact path=\"/register\" component={Register} />*/}\r\n            <Route exact path=\"/profile\" component={Profile} />\r\n            <Route path=\"/user\" component={BoardUser} />\r\n            {/*<Route path=\"/mod\" component={BoardModerator} />*/}\r\n            <Route path=\"/admin\" component={BoardAdmin} />\r\n            <Route path=\"/404\" component={NotFoundPage} />\r\n                    <Redirect to=\"/404\" />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}